(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{231:function(t,n,l){"use strict";l.r(n);var e={computed:{data:function(){return{title:"Angular 2 中的 HTTP 请求超时处理",description:"Angular 2 中的 HTTP 请求超时处理",keywords:"原创,笔记,RxJS,Angular 2",pathname:"rxjs-http-timeout",translation:null,create_time:"2017-01-16",prev:{title:"笔记：如何获取网站根域名",pathname:"get-root-domain-of-a-site"},next:{title:"关于时序攻击",pathname:"timing-atack"}}}}},v=l(3),component=Object(v.a)(e,function(){var t=this,n=t.$createElement,l=t._self._c||n;return l("post",{attrs:{data:t.data}},[l("p",[t._v("以前做 React Native 时，需要对请求进行超时处理。然而，React Native 提供的 "),l("code",[t._v("fetch")]),t._v(" 方法，根本没有提供超时的选择。于是只能自己玩些如下的黑科技了，代码一看就很乱，还难以维护：")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-javascript"},[l("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" TIME_OUT = "),l("span",{staticClass:"hljs-number"},[t._v("3000")]),t._v(";\n\n"),l("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" reqErrror = "),l("span",{staticClass:"hljs-literal"},[t._v("false")]),t._v(";\n"),l("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" reqDone   = "),l("span",{staticClass:"hljs-literal"},[t._v("false")]),t._v(";\n\n"),l("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" timeout = setTimeout("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("()")]),t._v(" =>")]),t._v(" {\n  "),l("span",{staticClass:"hljs-comment"},[t._v("// 超时错误")]),t._v("\n  reqErrror = "),l("span",{staticClass:"hljs-literal"},[t._v("true")]),t._v(";\n  "),l("span",{staticClass:"hljs-comment"},[t._v("// 标记本次请求结束")]),t._v("\n  reqDone = "),l("span",{staticClass:"hljs-literal"},[t._v("true")]),t._v(";\n}, TIME_OUT);\n\nfetch("),l("span",{staticClass:"hljs-string"},[t._v("'/api/test'")]),t._v(")\n  .then("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("res")]),t._v(" =>")]),t._v(" res.json())\n  .then("),l("span",{staticClass:"hljs-function"},[t._v("("),l("span",{staticClass:"hljs-params"},[t._v("data")]),t._v(") =>")]),t._v(" {\n    clearTimeout(timeout);\n    "),l("span",{staticClass:"hljs-comment"},[t._v("// 没有错误发生")]),t._v("\n    reqErrror = "),l("span",{staticClass:"hljs-literal"},[t._v("false")]),t._v(";\n    "),l("span",{staticClass:"hljs-comment"},[t._v("// 标记本次请求结束")]),t._v("\n    reqDone = "),l("span",{staticClass:"hljs-literal"},[t._v("true")]),t._v(";\n    "),l("span",{staticClass:"hljs-comment"},[t._v("// ...")]),t._v("\n  })\n  .catch("),l("span",{staticClass:"hljs-function"},[t._v("("),l("span",{staticClass:"hljs-params"},[t._v("e")]),t._v(") =>")]),t._v(" {\n    clearTimeout(timeout);\n\n    "),l("span",{staticClass:"hljs-comment"},[t._v("// 发生某种错误")]),t._v("\n    reqErrror = "),l("span",{staticClass:"hljs-literal"},[t._v("true")]),t._v(";\n    "),l("span",{staticClass:"hljs-comment"},[t._v("// 标记本次请求结束")]),t._v("\n    reqDone = "),l("span",{staticClass:"hljs-literal"},[t._v("true")]),t._v(";\n\n    "),l("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".error(e);\n  });")])]),l("p",[t._v("那会儿刚开始接触，团队的几个人对 ES6 这些东西基本处在一种边学边用的状态，所以上面的方法在当时解决了问题，也还不错。后来离开项目，也许至今还在保留着这种方式吧。唉，当初的代码写得是有多乱啊，竟然都不会封装一下囧。")]),t._v(" "),l("p",[t._v("简单改写之后的代码如下：")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-javascript"},[t._v("\n"),l("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" fetchWithTimeout = "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),l("span",{staticClass:"hljs-params"},[t._v("url = "),l("span",{staticClass:"hljs-string"},[t._v("''")]),t._v(", option = {}, timeout")]),t._v(") ")]),t._v("{\n  "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (!timeout) {\n    "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" fetch(url, option);\n  }\n\n  "),l("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" timeout = "),l("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" "),l("span",{staticClass:"hljs-built_in"},[t._v("Promise")]),t._v("("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v(" ("),l("span",{staticClass:"hljs-params"},[t._v("resolve, reject")]),t._v(") ")]),t._v("{\n    setTimeout("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v(" ("),l("span",{staticClass:"hljs-params"}),t._v(") ")]),t._v("{\n      "),l("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" err = "),l("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" "),l("span",{staticClass:"hljs-built_in"},[t._v("Error")]),t._v("("),l("span",{staticClass:"hljs-string"},[t._v("'timeout'")]),t._v(");\n      reject(err);\n    }, timeout);\n  });\n\n  "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" "),l("span",{staticClass:"hljs-built_in"},[t._v("Promise")]),t._v(".race([\n    timeout,\n    fetch(url, option).then("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("res")]),t._v(" =>")]),t._v(" res.json())\n  ]);\n};\n\nfetchWithTimeout("),l("span",{staticClass:"hljs-string"},[t._v("'/api/test'")]),t._v(", {}, TIME_OUT)\n  .then("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("res")]),t._v(" =>")]),t._v(" res.json())\n  .then("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("data")]),t._v(" =>")]),t._v(" {\n    "),l("span",{staticClass:"hljs-comment"},[t._v("// ...")]),t._v("\n  })\n  .catch("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("e")]),t._v(" =>")]),t._v(" {\n    "),l("span",{staticClass:"hljs-comment"},[t._v("// ...")]),t._v("\n  });")])]),l("p",[t._v("好了，言归正传，其实这次我是要记录 Angular 2 中的 http 超时处理的，事情缘由不再赘述，和前面差不多。")]),t._v(" "),l("p",[t._v("同样我想到了 "),l("code",[t._v("race")]),t._v("。 不过在 stackoverflow 中有人提过这个问题，是用 "),l("code",[t._v("timeout")]),t._v(" 操作符，但我使用的时候遇到了一些问题。")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-javascript"},[l("span",{staticClass:"hljs-keyword"},[t._v("import")]),t._v(" { Observable } "),l("span",{staticClass:"hljs-keyword"},[t._v("from")]),t._v(" "),l("span",{staticClass:"hljs-string"},[t._v("'rxjs/Observable'")]),t._v(";\n"),l("span",{staticClass:"hljs-keyword"},[t._v("import")]),t._v(" "),l("span",{staticClass:"hljs-string"},[t._v("'rxjs/add/observable/of'")]),t._v(";\n\n"),l("span",{staticClass:"hljs-keyword"},[t._v("import")]),t._v(" "),l("span",{staticClass:"hljs-string"},[t._v("'rxjs/add/operator/race'")]),t._v(";\n"),l("span",{staticClass:"hljs-keyword"},[t._v("import")]),t._v(" "),l("span",{staticClass:"hljs-string"},[t._v("'rxjs/add/operator/delay'")]),t._v(";\n\n"),l("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" TIME_OUT = "),l("span",{staticClass:"hljs-number"},[t._v("3000")]),t._v(";\n\n"),l("span",{staticClass:"hljs-comment"},[t._v("// ...")]),t._v("\n"),l("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" cancel$ = Observable.of("),l("span",{staticClass:"hljs-literal"},[t._v("null")]),t._v(").delay(TIME_OUT);\n\n"),l("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" request$ = "),l("span",{staticClass:"hljs-keyword"},[t._v("this")]),t._v(".http.get(url)\n  .map("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("res")]),t._v(" =>")]),t._v(" res.json())\n  .catch("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("e")]),t._v(" =>")]),t._v(" Observable.of(e));\n\n"),l("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" unsubscribe = request$.race(cancel$).subscribe(\n  "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[t._v("data")]),t._v(" =>")]),t._v(" "),l("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log(data),\n  err  => consoel.error(err),\n  ()   => "),l("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),l("span",{staticClass:"hljs-string"},[t._v("'complete'")]),t._v(");\n);\n"),l("span",{staticClass:"hljs-comment"},[t._v("// ...")])])]),l("p",[t._v("暂且记录成这样吧，有空再补充。")])])},[],!1,null,null,null);n.default=component.exports}}]);