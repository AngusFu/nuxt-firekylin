(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{151:function(e){e.exports=JSON.parse('[{"user":"文蔺","title":"Node.js 中的一些安全问题","tags":["原创","Node.js"],"date":"2021-02-01T00:00:00.000Z","create_time":"2021-02-01","pathname":"node-security","summary":"这是 2021 年 1 月 28 日做的一次关于 Node.js 安全相关的分享。内容已脱敏。补充 ——关于 ReDoS 的很好的一个例子：https://snyk.io/vuln/SNYK-JS-LODASH-1018905..."},{"user":"文蔺","title":"如何写技术文章","tags":["原创","随笔"],"category":"随笔","date":"2020-08-09T00:00:00.000Z","create_time":"2020-08-09","pathname":"writing-a-tech-article","summary":"今年在组内推动常态化的分享活动，协助一些同学选题并审阅 ppt 和文章，一直想就其间种种问题做一次总结。虽然自己不怎么动手写博客，但因负责编辑奇舞周刊（weekly.75team.com）的缘故，这几年接触了大量优秀的文章，耳濡目染，对技术文章的写作也形成了一些自己的看法。本文将从准备工作、文章结构、注意事项等方面展开，希望对乐于分享的同学有一定启发。准备工作动手写文章前，须依次明确两点：目标受众..."},{"user":"文蔺","title":"讲给前端的 OpenResty","tags":["原创","OpenResty"],"date":"2020-07-22T00:00:00.000Z","create_time":"2020-07-22","pathname":"openresty-for-frontend","summary":"这是 2020 年 7 月 22 日在组内做的一次分享。内容已脱敏。..."},{"user":"文蔺","title":"某官网开发手记","tags":["原创","代码"],"date":"2020-04-22T00:00:00.000Z","create_time":"2020-04-22","pathname":"relection-on-static-sites-development","summary":"这是 2020 年 4 月 22 日在组内做的一次分享。内容已脱敏。..."},{"user":"文蔺","title":"d8 安装手记","tags":["原创","V8"],"date":"2020-04-19T00:00:00.000Z","create_time":"2020-04-19","pathname":"install-d8","summary":"最近在看极客时间《图解 Google V8》专栏，其中部分内容用到了 v8 的 debug 版本 d8 调试。之前也读过一些介绍 d8 调试的文章。于是有了在自己电脑上安装 d8 的想法。自己动手首先找到的是权威文档: Installing V8 on a Mac。走到拉取源码这一步时，变遇到了限制，源码库太大，下载太慢。这促使我想到了一个曲线救国的办法。使用阿里云 ECS，地域选择美国硅谷。并且..."},{"user":"文蔺","title":"Clean Code","tags":["原创","代码"],"date":"2020-04-18T00:00:00.000Z","create_time":"2020-04-18","pathname":"clean-code","summary":"这是 2020 年 2 月份在组内做的一次远程分享。已脱敏。..."},{"user":"文蔺","title":"前端挖坑不完全指南","tags":["原创","前端"],"date":"2019-07-16T00:00:00.000Z","create_time":"2019-07-16","pathname":"never-do-this-in-fed","summary":"免责声明：请读者提高自身辨识能力，辩证地、批判地阅读。专业挖坑，包教包会。如有雷同，绝非巧合。俗话说，前人种树，后人乘凉。聊到种树，第一步可能就是挖坑。今天这篇文章，咱们就聊聊怎么给后人挖坑。充分利用变量作为专业挖坑的资深码农，你肯定知道有人曾经曰过，计算机科学中只有两大难题，缓存失效和命名。相信你也曾为了一个变量/方法的命名，在各种翻译工具之间上下求索。命名实在是太麻烦，以至于专门有人做了一个工..."},{"user":"文蔺","title":"移动端跨平台框架 flutter 简介","tags":["Flutter"],"date":"2018-05-21T00:00:00.000Z","create_time":"2018-05-21","pathname":"flutter-slides","summary":"移动端跨平台框架 flutter 简介"},{"user":"文蔺","title":"读《第五项修炼》","tags":["读书笔记","原创"],"date":"2018-04-22T00:00:00.000Z","create_time":"2018-04-22","pathname":"fifth-discipline","summary":"利用一个周末的时间，阅读了彼得·圣吉的《第五项修炼》。应该说，这是我阅读管理系列的书籍以来，最让我震撼的一本。这本书的副标题是“学习型组织的艺术与实践”，也就是说，主要着眼于如何构建学习型组织。贯穿全书的是各种各样的“模式”（model），这与上周老板给我们讲课时反复强调的“模型”在很多方面是一致的。学习型组织所谓学习型组织，其基本含义就是能够持续开发创造未来的能力的组织。作者在序言中指出，学习型..."},{"user":"文蔺","title":"读《管理的常识》","tags":["管理","读书笔记","原创"],"date":"2018-03-25T00:00:00.000Z","create_time":"2018-03-25","pathname":"common-sense-on-management","summary":"这个月主要读了《管理的常识》一书。说实话，拿到这本书时，因其装帧质量不是很好，且作者署名“鲁克德”与《卓有成效的管理者》作者彼得·德鲁克的名字对比来看充满浓浓的山寨气息，我的内心拒绝的。不过，随手翻了十多页，看到不少本土化的案例，觉得还是把成见放到一边，好好读读吧。一些常识首先介绍了“管理”的概念，简而言之就是通过别人完成任务。“枪头经理”的工作方式，违背了管理的基本原则。作者用自己上学的课堂故事..."},{"user":"文蔺","title":"读《卓有成效的管理者》","tags":["原创","笔记","管理"],"date":"2018-02-27T00:00:00.000Z","create_time":"2018-02-27","pathname":"the-effective-executive","summary":"这个月阅读了著名管理大师彼得·德鲁克的名著《卓有成效的管理者》。这本书是关于管理者如何管理自己的书。它所讲述的，并不是怎么管理下属、团队。这是一本值得所有在现代公司中的工作者一读的书。如何卓有成效？本书中强调了 5 点：记录并分析时间的使用情况；把眼光集中在贡献上；充分发挥人的长处；要事优先；有效决策。我的这篇读书笔记，并不求把每一点都覆盖到，只是记录我初读此书时候印象最深、感受最多的部分记录。”..."},{"user":"文蔺","title":"读稻盛和夫《干法》","tags":["原创","笔记","管理"],"date":"2018-01-23T00:00:00.000Z","create_time":"2018-01-23","pathname":"thinking-on-inamori-kazuos-book","summary":"这个月读了稻盛和夫先生的《干法》一书。与其说这是一本管理学的书，不如说是一本介绍工作哲学的书，教人处事的书。老先生从自己年轻尚未成名时的经验谈起，不厌其烦地与读者探讨工作的意义，告诉读者如何面对工作，如何在工作中取得成绩。劳动与工作非常欣赏老先生对工作、劳动的态度：“劳动是既能磨炼技能又能磨炼心志的修行，是自我实现、完善人格‘精进’的道场。 ” 是啊，把工作当作修行，看似“佛系”了一点，然人生数十..."},{"user":"文蔺","title":"读《一分钟经理人》","tags":["原创","笔记","管理"],"date":"2017-12-23T00:00:00.000Z","create_time":"2017-12-23","pathname":"one-minute-manager","summary":"周末闲读《一分钟经理人》，很薄的一本书，一小时内即可翻阅完毕。草草翻阅后，又禁不住多读了几遍，确实不失为一本好书，优秀的 Manager 读物。即便是普通一线员工，读之也将受益匪浅，学会更好地进行自我管理。边读边对照工作数年的工作经历、项目经验，感慨不已。平日的一些疑惑，稍稍得解。金句遍书都是，读之往往心动。我们的主人公“年轻人”的想要寻找一种经理人，“既领导有方又能引导人们平衡工作和生活，将一切..."},{"user":"文蔺","title":"[译] 极速渲染引擎 WebRender 揭秘","tags":["翻译","性能"],"date":"2017-10-14T00:00:00.000Z","create_time":"2017-10-14","pathname":"firefox-webrender","summary":"Firefox Quantum 发布在即。它带来了许多性能改进，包括从 Servo 引入的的极速 CSS 引擎。但 Servo 中的很大一块技术尚未被 Firefox Quantum 引入，虽然已经为期不远。这就是WebRender，它是 Quantum Render 项目的一部分，正被添加到 Firefox 中。WebRender 以极速著称，但它所做的并非加速渲染，而是使渲染结果更加平滑。依靠..."},{"user":"文蔺","title":"[译] 深入 JavaScript 数组：进化与性能","tags":["翻译","JavaScript"],"date":"2017-09-12T00:00:00.000Z","create_time":"2017-09-12","pathname":"javascript-array-evolution-performance","summary":"正式开始前需要声明，本文并不是要讲解 JavaScript 数组基础知识，也不会涉及语法和使用案例。本文讲得更多的是内存、优化、语法差异、性能、近来的演进。在使用 JavaScript 前，我对 C、C++、C# 这些已经颇为熟悉。与许多 C/C++ 开发者一样，JavaScript 给我的第一印象并不好。Array 是主要原因之一。JavaScript 数组不是连续（contiguous）的，其..."},{"user":"文蔺","title":"ArrayBuffer and TypedArray in ES2015","tags":["原创","ES2015","Reflect","Proxy"],"date":"2017-08-10T00:00:00.000Z","create_time":"2017-08-10","pathname":"es2015-arraybuffer","summary":"ArrayBuffer and TypedArray in ES2015"},{"user":"文蔺","title":"[译] font-display 的使用","tags":["翻译","CSS","性能"],"date":"2017-08-04T23:13:53.000Z","create_time":"2017-08-04","pathname":"font-display","summary":"进行性能优化时，决定 Web Font 的加载行为是一项技术活。@font-face规则中新增了一个font-display声明，开发者可以根据 Web Font 的加载时间来决定如何渲染或降级处理。字体渲染差异有了 Web Font，开发者可以在项目中加入丰富的排版功能。但需要权衡的是，下载字体会耗费一些时间。而下载时间难免会受到网络状况的影响，继而干扰用户体验。说实话，如果连页面展示都费劲，谁..."},{"user":"文蔺","title":"[译] 事件代理：模式 or 反模式？","tags":["翻译","设计模式"],"date":"2017-07-19T00:00:00.000Z","create_time":"2017-07-19","pathname":"event-delegation-pattern-or-anti-pattern","summary":"JavaScript 工具包（toolkit）和框架所做的大量工作，都集中于尝试修复、规范或优化浏览器的功能实现。此类工作需要做出许多假设，这些假设包括：问题是什么，开发人员将如何使用我们的工具，以及我们对未来的期望。但这些假设经常是错误的。更有甚者，在很长一段时间内，这些选择可能貌似正确，直至某天我们被问题反咬一口。在这个无知的幸福时期当中，我们的工具包可能变得相当受欢迎，并成为大型复杂代码库的..."},{"user":"文蔺","title":"函数响应式编程 —— RxJS 简介","tags":["原创","函数响应式编程","RxJS"],"date":"2017-07-18T00:00:00.000Z","create_time":"2017-07-18","pathname":"functional-programming","summary":"函数响应式编程 —— RxJS 简介"},{"user":"文蔺","title":"ES2015 Reflection API","tags":["原创","ES2015","Reflect","Proxy"],"date":"2017-06-26T00:00:00.000Z","create_time":"2017-06-26","pathname":"es2015-reflect","summary":"ES2015 Reflection API"},{"user":"文蔺","title":"[译] Web 安全清单","tags":["翻译","安全"],"date":"2017-05-22T00:00:00.000Z","create_time":"2017-05-22","pathname":"web-developer-security-checklist","summary":"在云上开发安全、健壮的 Web 应用特别特别难。如果你并不赞同这种说法，那也许你有着比人类还高级的生命形式，也可能是痛苦的觉醒正在前方等你。若你已潜心皈依 MVP，并坚信在一个月的时间足以完成一个能够创造价值且达到安全要求的产品 —— 听我一句劝，三思而行，不要急着做“产品原型”。也许在阅读完本文列出的清单之后，你会承认确实忽略了很多关键的安全问题。至少不要欺骗那些潜在用户，让他们知道眼下的产品并..."},{"user":"文蔺","title":"[译] GraphQL 的庐山真面目","tags":["翻译","GraphQL"],"date":"2017-05-13T00:00:00.000Z","create_time":"2017-05-13","pathname":"so-whats-this-graphql-thing-i-keep-hearing-about","summary":"译者注试用了众成翻译正在内测的新版翻译工具，借助谷歌翻译 API，速度比以前快多了。但也有一些缺憾，较以往逐句手动翻译字斟句酌不同，往往会迁就自动翻译结果，时间都花在调整工作上了。以下为正文：本文转载自：众成翻译译者：文蔺链接：http://www.zcfy.cc/article/2719原文：https://medium.freecodecamp.com/so-whats-this-graphq..."},{"user":"文蔺","title":"Chrome 中的 “Tab to Search” 与 Open Search","tags":["原创","技巧"],"date":"2017-05-08T11:28:59.000Z","create_time":"2017-05-08","pathname":"opensearch","summary":"描述在 Chrome 中新建标签页，输入网址的时候，浏览器会根据书签、历史记录进行自动补全，通过 Tab 键可以在浏览器提供的补全选项中切换。有时可以发现，点击 Tab 的时候，地址栏右侧会出现“按 tab 键可通过 XX 进行搜索”的提示。再次点击 Tab，地址栏中文字，就变成了一段蓝色文字：“使用 XX 搜索”。这时候就可以直接在地址栏中输入你要搜索的关键词，然后点击回车键，页面就会直接跳转到..."},{"user":"文蔺","title":"[译] 浏览器中的 ES6 module 实现","tags":["翻译","ES6"],"date":"2017-05-06T00:00:00.000Z","create_time":"2017-05-06","pathname":"es-modules-in-browsers","summary":"ES6 的模块特性（module） 开始在浏览器端实现啦！一切正在路上...浏览器备注Safari 10.1(无)Chrome Canary 60打开 chrome:flags 启用“实验性网络平台功能”Firefox 54打开 about:config 启用 dom.moduleScripts.enabledEdge 15打开 about:flags 启用“实验性 JavaScript 功能”&..."},{"user":"文蔺","title":"Facebook 开源代码优化工具 Prepack","tags":["JavaScript"],"date":"2017-05-04T00:00:00.000Z","create_time":"2017-05-04","pathname":"prepack","summary":"Fackbook 又搞了个大新闻！今天一早，朋友圈被一个名为 Prepack 的工具刷爆了。周刊君很好奇地看了下官网（prepack.io），这么厉害的工具，有必要第一时间向大家介绍一下（还能不能好好过个青年节了）。看 “Prepack” 这个名字就能大概知道，它的作用，肯定是在发布前（“pre”）对代码动了些什么手脚。官网介绍 Prepack 是“一个使 JavaScript 跑得更快的工具”。..."},{"user":"文蔺","title":"[译] 内容加速黑科技趣谈","tags":["翻译","JavaScript","性能"],"date":"2017-04-28T00:00:00.000Z","create_time":"2017-04-28","pathname":"fun-hacks-faster-content","summary":"数周前，在伦敦 Heathrow 机场等飞机的空闲中，我顺便处理了一些工作上的事情。不经意间发现 Github 在性能方面的一些问题，颇为诧异。通过新 tab 打开的页面，其加载速度竟然比直接点击链接打开的页面要快。不信请看视频（译者注：可能需要科学上网）：GitHub link click vs new tab。点击链接的同时复制链接并在新的 tab 页中打开。可以看到，尽管先点击的是链接，但渲..."},{"user":"文蔺","title":"[译] Emoji.prototype.length  —— Unicode 字符那些事儿","tags":["翻译","Unicode","Emoji","JavaScript"],"date":"2017-04-27T00:00:00.000Z","create_time":"2017-04-27","pathname":"unicode-javascript-and-the-emoji-family","summary":"译者注：本文用到了很多 emoji 符号，建议不要使用 Windows 系统阅读本文。如今 emoji 已经成为文字交流的重要基础。离开这些精巧的符号，只怕很多对话早就因尴尬和误解而草草收场了。还记得当年短信风行时的那些事吗？没有笑脸表情的文字聊天过程中，常常会得到“你不是在开玩笑吧？”这样的回复，以免将一些无聊的笑话信以为真。后来并没有花多久的时间，大家都明白了，单纯靠文字来理解那些幽默与调戏并..."},{"user":"文蔺","title":"笔记：如何获取网站根域名","tags":["JavaScript","开发心得","原创"],"date":"2017-04-26T00:00:00.000Z","create_time":"2017-04-26","pathname":"get-root-domain-of-a-site","summary":"首先声明，这里所说的“根域名”，并不是指“全球共有13台根逻辑域名服务器”这句话中的“根域名”。而是指某一个站点的“根域名”（更新：或者也可以称之为“当前网站的主域名”，目前笔者并没有找到标准称呼）。百度搜索是“www.baidu.com”，百度翻译的域名是“fanyi.baidu.com”，百度地图的域名则是“map.baidu.com”。这些域名有共同的部分“baidu.com”。在本文中，我..."},{"user":"文蔺","title":"Angular 2 中的 HTTP 请求超时处理","tags":["原创","笔记","RxJS","Angular 2"],"date":"2017-01-16T11:31:45.000Z","create_time":"2017-01-16","pathname":"rxjs-http-timeout","summary":"以前做 React Native 时，需要对请求进行超时处理。然而，React Native 提供的 fetch 方法，根本没有提供超时的选择。于是只能自己玩些如下的黑科技了，代码一看就很乱，还难以维护：const TIME_OUT = 3000;let reqErrror = false;let reqDone   = false;let timeout = setTimeout(() =&gt..."},{"user":"文蔺","title":"关于时序攻击","tags":["原创","笔记","安全"],"date":"2017-01-16T00:00:00.000Z","create_time":"2017-01-16","pathname":"timing-atack","summary":"前些日子，奇舞周刊公众号推送了一篇文章，《Node.js 面试问题及答案(2017 版)》。其中有一个问题很有意思，请看下面这段代码，有什么问题吗？function checkApiKey (apiKeyFromDb, apiKeyReceived) {    if (apiKeyFromDb === apiKeyReceived) {    return true  }  return fals..."},{"user":"文蔺","title":"[译] Bluebird 高性能揭秘","tags":["翻译","Promise"],"date":"2017-01-12T00:00:00.000Z","create_time":"2017-01-12","pathname":"javascript-performance-fundamentals-make-bluebird-fast","summary":"Bluebird 是一个广泛使用的 Promise 库，最早在 2013 年得到人们的关注。相比其他同等水平的 Promise 库，Bluebird 快了一百来倍。Bluebird 自始至终遵循着 JavaScript 优化的一些基本原则，所以才有这么好的性能。本文将会介绍其中最有价值的三个方面。1.  函数中的对象分配最小化对象分配（object allocation），尤其是函数中的对象分配，..."},{"user":"文蔺","title":"[译] React 中的 AJAX 请求：获取数据的方法与时机","tags":["翻译","React"],"date":"2016-12-07T23:43:23.000Z","create_time":"2016-12-07","pathname":"ajax-requests-in-react","summary":"React 新手一开始可能会问到这样一个问题，“在 React 中如何发送 AJAX 请求呢？”本文正要回答该问题。首先：React 本身对获取数据的方式并无任何特殊偏好。实际上，在 React 的图景中，根本就不知道“服务器”这种东西的存在。React 只是使用 props 和 state 两处的数据进行组件渲染。因此，想要使用来自服务端的数据，必须将数据放入组件的 props 或 state..."},{"user":"文蔺","title":"前端界面 Modal 的控制","tags":["原创","JavaScript","用户体验"],"date":"2016-12-02T20:38:23.000Z","create_time":"2016-12-02","pathname":"accessible-modal","summary":"问题提出需要说明的是，题目中所说的 Modal，指的是所有由前端开发者自定义的对话框，如通常用到的 Alert、Prompt、Confirm 等等，经常伴随着一个半透明的灰黑色全局 mask。事情源自某天使用某网站的页面，出现一个自定义的 Comfirm，习惯性按下回车确认，等了很久也不见弹出层关闭。于是很绝望。继而发现，真不是这一个网站的问题。看看一般浏览器原生的 alert、prompt、co..."},{"user":"文蔺","title":"笔记：velocity 2016 第二天","tags":["原创","笔记"],"date":"2016-12-02T19:53:51.000Z","create_time":"2016-12-02","pathname":"velocity-2016-day-2","summary":"有幸得到 Velocity 2016 大会门票，屁颠屁颠跑去听分享。下面是第二天的笔记。记得比较简略，凑合看吧。PPT 下载通道已经放出来了，感兴趣的可以自己跟踪一下。阿里应用运维体系演变分享者：阿里，毕玄工作范围日常运维操作变更环境维护（OS 升级）容量管理如何分布机器稳定性监控、报警故障处理脚本化单机脚本批量操作脚本主要问题复杂变更逻辑不好实现发布到哪里了？运维自己都不知道工具化编写软件系统工..."},{"user":"文蔺","title":"笔记：velocity 2016 第一天","tags":["原创","笔记"],"date":"2016-12-01T22:11:38.000Z","create_time":"2016-12-01","pathname":"velocity-2016-note-1","summary":"有幸得到老大给的 Velocity 大会门票，屁颠屁颠跑去听分享。下面是今天（第一天）的笔记。记得比较简略，凑合看吧。PPT 下载通道已经放出来了，感兴趣的可以自己跟踪一下。UseThePlatform —— Web 组件介绍分析者：来自 Youtube 的 Mikhail Sychev感觉就是对 Polymer 和 Web Components 的科普。期待明天更详细的分享。其实关于 Polym..."},{"user":"文蔺","title":"[译] CSS 方法论的选择","tags":["翻译","CSS"],"date":"2016-11-30T17:37:52.000Z","create_time":"2016-11-30","pathname":"when-to-use-which-css-methodology","summary":"本文转载自：众成翻译译者：文蔺链接：http://www.zcfy.cc/article/1828原文：http://simurai.com/blog/2016/11/27/css-methodologies多年来，CSS 方法论层出不穷。不幸的是，并不存在适用所有场景的最佳选择。本文介绍了一些适用于不同情况的 CSS 方法论。好，跟我一起开始踩坑之旅吧。我只需要创建一个单页面或简单的站点。内容以..."},{"user":"文蔺","title":"[译] 手把手教你写一个 Javascript 框架：项目结构","tags":["翻译","ES6","JavaScript"],"date":"2016-11-20T23:27:40.000Z","create_time":"2016-11-20","pathname":"nx-project-structure","summary":"过去几个月中，RisingStack 的 JavaScript 工程师 Bertalan Miklos 编写了新一代客户端框架 NX。Bertalan 将通过编写 JavaScript 框架系列文章与我们分享他在编写框架过程中的收获：本章将展示 NX 的项目结构，并讲述如何解决可扩展性、依赖注入以及私有变量等方面的一些困难。本系列章节如下：项目结构（正是本文）执行调度(Execution timi..."},{"user":"文蔺","title":"[译] 手把手教你写一个 Javascript 框架：沙箱求值","tags":["翻译","JavaScript","ES6"],"date":"2016-11-18T00:32:07.000Z","create_time":"2016-11-18","pathname":"sandbox-code-evaluation","summary":"本文是“编写 JavaScript 框架”系列的第三章。在本章中，我将介绍浏览器中对代码求值的几种不同方式及其存在的问题，也会介绍一种依赖 JavaScript 新特性的方法。本系列主要是如何开发一个开源的客户端框架，框架名为 NX。我将在本系列中分享框架编写过程中如何克服遇到的主要困难。对 NX 感兴趣的朋友可以点击 NX 项目主页查看。本系列章节如下：项目结构（Project structur..."},{"user":"文蔺","title":"[译] 手把手教你写一个 Javascript 框架：执行调度","tags":["翻译","JavaScript","Event Loop"],"date":"2016-11-14T22:37:14.000Z","create_time":"2016-11-14","pathname":"execution-timing","summary":"本文是“编写 JavaScript 框架”系列的第二章。在本章中，我将介绍 JavaScript 中异步执行代码的几种不同方式。你会读到关于事件循环相关的内容，以及像 setTimeout 和 Promise 等时间调度（timing）技术之间的差异。本系列主要是如何开发一个开源的客户端框架，框架名为 NX。我将在本系列中分享框架编写过程中如何克服遇到的主要困难。对 NX 感兴趣的朋友可以点击 N..."},{"user":"文蔺","title":"[译] 手把手教你写一个 Javascript 框架：数据绑定","tags":["翻译","ES6","数据绑定"],"date":"2016-11-14T16:44:01.000Z","create_time":"2016-11-14","pathname":"data-bind-dirty-checking","summary":"本文是“编写 JavaScript 框架”系列的第四章。本章我将解释脏检查和基于getter/setter 访问器的数据绑定技术，并指出它们各自的优缺点。本系列主要是如何开发一个开源的客户端框架，框架名为 NX。我将在本系列中分享框架编写过程中如何克服遇到的主要困难。对 NX 感兴趣的朋友可以点击 NX 项目主页查看。本系列章节如下：项目结构（Project structuring）执行调度（Ex..."},{"user":"文蔺","title":"[译] 手把手教你写一个 Javascript 框架：使用 ES6 Proxy 实现数据绑定","tags":["翻译","ES6","数据绑定"],"date":"2016-11-14T16:44:01.000Z","create_time":"2016-11-14","pathname":"es6-proxy-data-binding","summary":"本文是“编写 JavaScript 框架”系列的第五章。在本章中，我将介绍如何使用 ES6 Proxy 实现简单、强大的数据绑定。本系列主要是如何开发一个开源的客户端框架，框架名为 NX。我将在本系列中分享框架编写过程中如何克服遇到的主要困难。对 NX 感兴趣的朋友可以点击 NX 项目主页查看。本系列章节如下：项目结构（Project structuring）执行调度（Execution timi..."},{"user":"文蔺","title":"笔记：IE 下透明度问题","tags":["原创","CSS"],"date":"2016-11-14T11:11:11.000Z","create_time":"2016-11-14","pathname":"ie-filter","summary":"IE8 下面遇到奇怪的问题。本来半透明的 png 图片，竟然一片黑。然而，我明明按照习惯使用了 opacity + filter 的方式。img {  opacity: 1;  filter: alpha(opacity=100);}结果发现，IE8 完全不是这么解析的。于是想起之前看过不少地方提到为 IE8 准备的 -ms-filter（主要是滤镜什么的）。然后产生了下面这个方法：img {..."},{"user":"文蔺","title":"快来上钩哈哈哈","tags":["原创"],"date":"2016-11-13T00:00:00.000Z","create_time":"2016-11-13","pathname":"fishing-for-spider","summary":"最近遇到一点问题。可以注意到，我的博客是添加过版权声明的。其实吧，版权这些事情对我这种无名小卒来说，无阻挂齿。文章被人看到，已经很满足了，万一有人分享一下或者点个赞、打赏一下，那更是受宠若惊了。所以呢，我自己的文章，在我变成大神之前，你们这些网站，说真的，爱咋用咋用。可是呢，偏偏我又是个过了六级的，平常没事也翻译点文章，翻译文章这种事情，其实蛮有趣的，在翻译中学习，觉得比每天随便翻翻要好得多。有时..."},{"user":"文蔺","title":"[译] 理解 Node.js 事件循环","tags":["翻译","JavaScript","Node.js","Event Loop"],"date":"2016-11-12T00:00:00.000Z","create_time":"2016-11-12","pathname":"nodejs-event-loop","summary":"本文介绍了 Node.js 事件循环是如何工作，如何使用 Node.js 构建高速应用。文章还会涉及最常见的一些问题及其解决方案。（我们正在编写一系列文章，聚焦于那些大规模使用 Node.js 的公司、有一定 Node 基础的开发者们的需求。）Node.js at Scale 系列章节:使用 npmnpm 技巧与最佳实践语义化版本和模块发布理解 Module System、CommonJS 和 r..."},{"user":"文蔺","title":"算法学习：冒泡排序","tags":["原创","JavaScript","算法"],"date":"2016-11-09T00:00:00.000Z","create_time":"2016-11-09","pathname":"algo-bubble-sort","summary":"从基础入手。前面学习了插入排序和选择排序。接下来看冒泡排序。依然假设手上有 N 张扑克牌，记作 cards。第一步，先比较第 1 张与第 2 张，如果第 1 张比第 2 张大，则将两者调换位置；第二步，重复上面的方法，比较第 2 张、第 3 张；……第 (n - 1) 步，比较第 (n - 1) 张、第 n 张，若第 (n - 1) 张比第 n 张大，则将两者调换位置。仔细想下，发现没有？这样 (..."},{"user":"文蔺","title":"算法学习：选择排序","tags":["原创","JavaScript","算法"],"date":"2016-11-06T00:00:00.000Z","create_time":"2016-11-06","pathname":"algo-selection-sort","summary":"所谓“选择排序”，基本思路就是不断从数组中选择出最小的数。还是以扑克牌为例。假设有 N 张扑克牌，记扑克牌集合为 cards，则我们的基本操作如下：首先，从手中拿出左侧第 0 张牌 cardA；第二步，将 cardA 向右依次与剩下的  (N - 1) 张牌进行对比，找出最小的那张牌所在的位置 minIndex；第三步，对比完成后，若 minIndex 不等于 1，则说明 cardA 不是最小的，..."},{"user":"文蔺","title":"[译] HTML 表单验证","tags":["JavaScript","翻译"],"date":"2016-11-05T00:00:00.000Z","create_time":"2016-11-05","pathname":"using-html-form-validation-in-pure-javascript","summary":"我是 HTML 表单验证（HTML form validation） 的超级粉丝，因为它取代了我使用了近 20 年的 JavaScript 代码。不幸的是，Safari 并不支持这个特性（谈到 Web 时，先别跟我提 Apple 和他们的优先级）。不过，我确实很喜欢这个主意，将问题交给 HTML 自己解决。实际上，最近有个网站展示了许多类似的例子：You Might Not Need JavaSc..."},{"user":"文蔺","title":"算法学习：插入排序","tags":["原创","算法","JavaScript"],"date":"2016-11-02T00:00:00.000Z","create_time":"2016-11-02","pathname":"algo-insertion-sort","summary":"缘起最近打算好好学习算法。因为专业的原因，对计算机原理、数据结构与算法这些知识，一开始可以说是一窍不通的。最开始在项目中接触算法，完全基于项目需要。当时负责一个酒店项目，数据接入来自公共部分。项目详情页拿到的数据，包括当前酒店所有套餐，最多的可能有几十个。需求仅仅要求显示三条，而且结果是根据不同内容（如状态、网络、热水、空调等等）有优先级的。当时被这套逻辑闹得很揪心。后来想想，放手干吧，多做几次遍..."},{"user":"文蔺","title":"使用 jQuery.ajax 上传带文件的表单","tags":["JavaScript","原创","jQuery"],"date":"2016-10-29T00:00:00.000Z","create_time":"2016-10-29","pathname":"jquery-ajax-formdata","summary":"今天帮人看代码的时候，遇到一点小问题。使用 jQuery 上传带文件的表单时，会有些问题。首先，因为使用的是 FormData，所以必须在传入 $.ajax 的参数中配置 processData: false。否则将会抛出 Illegal invocation 的异常，因为 jQuery 默认是会对传入的 data 字段的数据进行处理的。官方文档是这么解释的：其次，注意请求的 Content-Ty..."},{"user":"文蔺","title":"JavaScript Weekly 307 阅读笔记","tags":["原创","JavaScript","阅读笔记"],"date":"2016-10-28T00:00:00.000Z","create_time":"2016-10-28","pathname":"javascript-weekly-307","summary":"js 编写简单的 compilerHow to Make a (Very) Simple Compiler with JS这个小小的 compiler 还挺简单，将简单的画图指令转换为 SVG 标记。文章作者写了一个 demo，用来演示转换的整个过程，感觉不错，建议看看。之前也有人讲过一些，比如 github 上的 the-super-tiny-compiler（有中文版），貌似还在 2016 年..."},{"user":"文蔺","title":"2016 年 10 月 27 日阅读笔记","tags":["阅读","原创"],"category":"随笔","date":"2016-10-27T00:00:00.000Z","create_time":"2016-10-27","pathname":"20161027-reading","summary":"本文是我昨天和今天的阅读摘要。民族主义和爱国主义首先，来自 FT 中文网的一篇文章，澳门大学社会学系郝志东教授所写的《从中国到英美：也谈民族主义和爱国主义》。引了几段很值得思考的，最后一段尤其值得看看。之前思考南海争端时，我曾想过这个问题。作为普普通通的人，指点江山时，放下天朝大国的架子吧，我倒是希望我们真能做到“联合起来”，实现“因特纳雄耐尔”。李江说，在这里，人们看不到“公民直面国家、社会、社..."},{"user":"文蔺","title":"关于 setImmediate","tags":["原创","JavaScript"],"date":"2016-10-27T00:00:00.000Z","create_time":"2016-10-27","pathname":"js-set-immediate","summary":"W3C Draft文档地址题目叫 “Efficient Script Yielding”，一份 2011 年的 “Editor&#39;s Draft”，从题目就能看出用途。建议有时间读一遍，超级短。摘要就一句话：This specification defines an interface for web applications to flush the browser event queue..."},{"user":"文蔺","title":"关于前端常见算法面试题的一些思考","tags":["算法","JavaScript","原创"],"date":"2016-10-26T00:00:00.000Z","create_time":"2016-10-26","pathname":"front-end-interview-algo-questions","summary":"今天上班时间，读了 @JackPu 的新文章《前端面试中的常见的算法问题》。内容虽然看起挺基础，但可以有不少思考，同时也是一次挺好的复习。其中，有几个问题，想出了一些不同的解决办法，做了下笔记，并且进行了简单的性能测试。关于排序，这次没有深看。接下来有空时，再研究一番。判断回文(Palindromic Words)结果是，使用循环来判断，性能远高于数组方法。接下来，在其他一些例子中也能看到，借用数..."},{"user":"文蔺","title":"JavaScript Weekly 306 阅读笔记","tags":["原创","阅读笔记","Angular 2"],"date":"2016-10-21T00:00:00.000Z","create_time":"2016-10-21","pathname":"javascript-weekly-306-notes","summary":"$(document).ready 方法jQuery 3 中$(document).ready(handler) 等方法被 deprecated，仅保留 $(handler) $(&#39;img&#39;).ready 这种方式，和 $(document).ready 没有任何区别$(selector).ready(handler) 这种是低效的，且会造成不必要的误解脚本放在 &lt;body&..."},{"user":"文蔺","title":"[译] yarn 和 npm 命令行小抄","tags":["翻译","NPM","Node.js"],"date":"2016-10-19T00:00:00.000Z","create_time":"2016-10-19","pathname":"npm-vs-yarn-cheat-sheet","summary":"好，想必你对新的 JavaScript 包管理工具 yarn 已经有所耳闻，并已通过 npm i -g yarn 进行了安装，现在想知道怎么样使用吗？如果你了解 npm，你已经会很大一部分啦！下面是我从 npm 切换到 yarn 的一些笔记。请收藏本文，本文会随着 yarn 的升级而更新。需要了解的命令npm install === yarn —— install 安装是默认行为。npm inst..."},{"user":"文蔺","title":"[译] 函数式 TypeScript","tags":["翻译","TypeScript","函数式编程"],"date":"2016-09-28T21:46:46.000Z","create_time":"2016-09-28","pathname":"functional-refactor-typescript","summary":"谈到函数式编程时，我们常提到机制、方法，而不是核心原则。函数式编程不是关于 Monad、Monoid 和 Zipper 这些概念的，虽然它们确实很有用。从根本上来说，函数式编程就是关于如使用通用的可复用函数进行组合编程。本文是我在重构 TypeScript 代码时使用函数式的一些思考的结果。首先，我们需要用到以下几项技术：尽可能使用函数代替简单值数据转换过程管道化提取通用函数来，开始吧！假设我们有..."},{"user":"文蔺","title":"笔记：TypeScript 中引用全局变量","tags":["原创","TypeScript"],"date":"2016-09-08T13:42:47.000Z","create_time":"2016-09-08","pathname":"ts-note-on-global-reference","summary":"朋友的朋友，最近的一个项目使用了 angular.js，是使用 typescript 开发的。让我惊奇的是，竟然还是使用 1.2 版本。项目还引用了一个外部 js（没有现成的 .d.ts 文件可用）。这个 js 文件暴露了一个全局变量，需要在 ts 文件中调用。暂且命名为 ClassOutOfTS。那么问题来了。在 ts 中直接调用 new ClassOutOfTS() 会引起编译报错，因为 ts..."},{"user":"文蔺","title":"[译] 让人倾倒的 11 个 npm trick","tags":["翻译","Node.js","npm"],"date":"2016-09-03T00:45:10.000Z","create_time":"2016-09-03","pathname":"eleven-npm-tricks-that-will-knock-your-wombat-socks-off","summary":"有效率地使用 npm 可能会很困难。内置特性堆积如山，尝试学习它们是很艰巨的任务。就我个人而言，单学习并使用其中一些小 trick 解救了我，从前移除那些未使用的模块时，我只能先删除整个 node_modules 文件夹，接着再用 npm install 重新安装一切。（npm prune，请见本文第四节。）如你所想，这简直要让人发狂了。我们编了这样一个 trick 列表，使用起来很简单，它们会加..."},{"user":"文蔺","title":"[译] HTTP 推送","tags":["翻译","HTTP2","Server Push"],"date":"2016-09-02T18:31:13.000Z","create_time":"2016-09-02","pathname":"being-pushy","summary":"上周我在斯达哥尔摩住了几天，出席了 HTTP 研讨会，参与了不少吸引人的讨论。其中一次是关于 HTTP 推送及其优缺点、早期实验结果的。由于早期实验部署结果不那么理想，人们对 HTTP 推送大体持着怀疑态度，不过我想分享下自己更乐观一些的观点。HTTP 推送能做哪些预加载不能做的事？从怀疑者那里一再听到的观点是，“推送相对于预加载来说，只不过节省了一次 RTT（Round Trip Time）而已..."},{"user":"文蔺","title":"聊聊 JavaScript Date 对象","tags":["原创","JavaScript"],"date":"2016-08-31T12:05:45.000Z","create_time":"2016-08-31","pathname":"date-in-javascript","summary":"时间的发现日常生活中，各种形式的时间字符到处都是。时间观念的产生，时间单位、计时工具的发明，给人类带来的变化实在一言难尽。今天就来谈谈日期那些事儿。一起来看看 JavaScript 中的日期对象 Date。Date 对象和其他对象如 Math、RegExp 等一样，Date 对象是 JavaScript 语言中的内建（build-in）对象。在工作中，Date 对象有着许多重要的应用。创建一个 D..."},{"user":"文蔺","title":"[译] 渐进增强的键盘导航","tags":["翻译","用户体验","可用性"],"date":"2016-08-30T15:15:46.000Z","create_time":"2016-08-30","pathname":"better-keyboard-navigation-with-progressive-enhancement","summary":"创建界面时很重要的一点是，要考虑到那些只依赖键盘来使用产品的用户。这对可访问性来说是基本要求，在多数情况下，通过键盘操作访问也并非难事。这意味着首先，也是最重要的，是使用键盘可访问元素进行交互。如果希望用户跳转到其他地方，使用带有有效的 href 属性的锚点连接如果希望用户执行你自己的代码，并在当前文档中停留，使用按钮通过流动 tabIndex 技术几乎可以使所有内容都能通过键盘访问，不过，既然已..."},{"user":"文蔺","title":"[译] Fetch 请求的本地缓存","tags":["翻译","JavaScript","优化","缓存"],"date":"2016-08-27T21:07:42.000Z","create_time":"2016-08-27","pathname":"cache-fetched-ajax-requests","summary":"本文展示了如何使用实现 fetch 请求的本地缓存，遇到重复请求时，将会从 sessionStorage 中读取数据。这样做的好处是，无需为每个需要缓存的资源编写自定义代码。如果你想在 JavaScript 盛会中露露脸，秀秀如何玩转 Promise、最前沿的 API 和 localStorage，那就接着往下看吧。Fetch API此时此刻，你对 fetch 可能已经很熟悉了。它是浏览器提供的用..."},{"user":"文蔺","title":"[译] 渐进式 Web App 的离线存储","tags":["翻译","渐进式 Web App"],"date":"2016-08-18T18:04:13.000Z","create_time":"2016-08-18","pathname":"offline-storage-for-progressive-web-apps","summary":"2016 很可能成为网络弹性（network resilience）元年。网络连接很可能不靠谱（flakey），或者根本就连不上，这也是为什么在 渐进式 Web App（译者注：Progressive Web App，以下简称 PWA） 中，支持离线和性能可靠都很重要。本文总结了关于 PWA 离线数据存储的一些创意。想想那些提供有意义的离线体验所需要的 JSON 数据、图片以及其他的静态数据。离线..."},{"user":"文蔺","title":"[译] WebAssembly  初尝","tags":["翻译","WebAssembly","JavaScript"],"date":"2016-08-16T14:46:36.000Z","create_time":"2016-08-16","pathname":"build-your-first-thing-with-web-assembly","summary":"头一次听说 WebAssembly 的时候就觉得很酷，然后就超兴奋地开始尝试。但从一开始尝试的过程就不顺利，越来越让人灰心。本文的目的就是解决问题，让你免受困扰。读者须知本文写作于 2016 年 6 月 24 日。WebAssembly 是一项很新的、不稳定的技术；随着其标准化过程发展，本文中的任何内容都可能是错误的。不过先不管了....WebAssembly 是什么好吧，官网是这么描述的：Web..."},{"user":"文蔺","title":"[译] 自动化、跨浏览器的 JavaScript 单元测试","tags":["翻译","测试","单元测试"],"date":"2016-08-15T15:52:45.000Z","create_time":"2016-08-15","pathname":"set-up-automated-cross-browser-javascript-unit-testing","summary":"大家都知道在不同浏览器上测试代码有多重要。多数时候我会觉得，开发者社区中的朋友们这一点做得非常棒 —— 至少是在初次发布项目的时候。测试做得不好的是在每次修改代码的时候。我个人也为此内疚。“自动化、跨浏览器的 JavaScript 单元测试”，这在我的 todo list 中已陈列数年，可每次坐下来打算认真弄明白时，又放弃了。我知道，有一部分是惰性所致，不过此话题的优质信息的惊人匮乏也难辞其咎。有..."},{"user":"文蔺","title":"[译] JavaScript  与函数式编程","tags":["翻译","函数式编程","JavaScript"],"date":"2016-08-10T12:19:08.000Z","create_time":"2016-08-10","pathname":"JavaScript-and-Functional-Programming","summary":"译者注：推荐一篇译文，《函数式编程术语解析》。本文是我在 2016 年 7 月 29 号听 Kyle Simpson 精彩的课程《Functional-Light JavaScript》时所做的笔记（外加个人的深入研究）（幻灯片在这）。长久以来，面向对象在 JavaScript 编程范式中占据着主导地位。不过，最近人们对函数式编程的兴趣正在增长。函数式编程是一种编程风格，它强调将程序状态变化（即副..."},{"user":"文蔺","title":"[译] eBay：style & speed","tags":["翻译","用户体验","AMP"],"date":"2016-07-27T15:47:19.000Z","create_time":"2016-07-27","pathname":"browse-ebay-with-style-and-speed-ebay","summary":"今年 eBay 的顶级举措之一是为我们的用户提供一个更好的浏览体验。在最近的一次采访中，Devin Wenig 对关于此事的重要性已经有了很棒的评论。我们的想法是利用结构化的数据和机器学习，让各种价值观不同的用户购物，这些用户中可能一些人偏好存钱，而另外一些人可能会关注像畅销品这样一些东西。开始设计体验的时候，我们最先聚焦于移动 Web。和许多其他组织一样，移动 Web 已成为发展成长最高的产业点..."},{"user":"文蔺","title":"[译] Service Worker 生命周期","tags":["翻译","Service Worker"],"date":"2016-07-25T10:46:44.000Z","create_time":"2016-07-25","pathname":"the-service-worker-lifecycle","summary":"如果使用过 Service Worker，之前你可能遇到过这样的问题，原来的 Service Worker 还在起作用，即使文件本身已经更新过。其中的原因在于 Service Worker 生命周期中的一些微妙之处；它可能会被安装，而且是有效的，但实际上却没有被 document 纳入控制。Service Worker 可能拥有以下六种状态的一种：解析成功（parsed），正在安装（install..."},{"user":"文蔺","title":"[译] 从发展历史理解 ES6 Module","tags":["翻译","ES6","JavaScript","模块化"],"date":"2016-07-22T15:16:30.000Z","create_time":"2016-07-22","pathname":"understanding-es6-modules-via-their-history","summary":"在很长一段时间内， ES6 带来了 JavaScript 最大的变化，包括管理大型、复杂代码库的一些新特性。这些特性，主要是 import 和 export 关键词，共同被称为 modules。如果你现在还是 JavaScript 新手，特别是从其他已有内建模块（各种名字如 module、package、unit）支持的语言转过来的，ES6 的模块设计可能看起来挺奇怪的。很多从 JavaScrip..."},{"user":"文蔺","title":"[译] 关于转译器 JavaScript 程序员需要知道的事","tags":["翻译","JavaScript","TypeScript","转译器"],"date":"2016-07-20T21:19:08.000Z","create_time":"2016-07-20","pathname":"javascript-transpilers-need-know","summary":"想要在与 ECMAScript 保持一致的同时也不抛弃那些没有最新 JavaScript 特性的浏览器吗？或者在成为标砖之前试验那些即将到来的特性，以告诉 ECMAScript 哪些对你有用，哪些没什么用？再或者就是想利用那些大型项目中提高 JavaScript 效率的工具？转译器（transpiler）可以帮你完成所有这些。转译器是将一种语言的代码转换为另一种语言代码的工具，它们过去曾被更多地用..."},{"user":"文蔺","title":"[译] 移动开发中的仿真器与模拟器","tags":["翻译","移动开发","模拟器"],"date":"2016-07-19T16:21:41.000Z","create_time":"2016-07-19","pathname":"how-do-mobile-emulators-even","summary":"译者注：本文主要涉及到两个概念： Emulator 和 Simulator。通常我们在工作中可能统统习惯称为“模拟器”，但实际上二者有所不同。为了分清概念，本文将 Emulator 译作 “仿真器”， Simulator 译作 “模拟器”。听起来可能略拗口，如产生生理或心理不适，敬请谅解。仿真器（Emulator），又称仿真程序，在软件工程中指可以使计算机或者其他多媒体平台（掌上电脑，手机）能够运..."},{"user":"文蔺","title":"[译] WebP 支持：超乎你想象","tags":["翻译","Webp","前端优化"],"date":"2016-07-18T21:26:22.000Z","create_time":"2016-07-18","pathname":"webp-support","summary":"WebP 是 Google 发明的更小的替代 JPEG 和 PNG 的格式。最近有很多关于WebP支持的疑惑，细说来就是可以用它做什么，不能做什么，比如说浏览器支持，CMS 支持等等。今天我想清除你所有可能的疑虑。WebP 的支持程度实际上比你想的可能要好得多。WebP 浏览器支持并非所有浏览器都支持 WebP，所以很重要的是你得清楚哪些浏览器是支持的，这可能会影响你做决定，是否在你的网站或项目中..."},{"user":"文蔺","title":"[译] HTTP2 Server Push 实践：单 Link  报头包含多资源场景","tags":["翻译","HTTP2","Server Push"],"date":"2016-07-17T19:43:53.000Z","create_time":"2016-07-17","pathname":"http-2-server-push-with-multiple-assets-per-link-header","summary":"译者注译者在做自己的一个小工具（抓取博客的 Chrome 扩展）的时候，使用 jQuery 辅助作为 DOM 解析器，为了避免加载图片、脚本、样式表等无用的资源，在将字符串传给 $ 的时候，先对字符串中的相关标签进行了处理。但遇到某个网站的时候，一直疑惑不解，明明已经做了替换，但通过 Chrome Devtools 能看到，部分资源还是会下载。几经折腾，发现还是因为自己懂得太少了。查看请求该页面时..."},{"user":"文蔺","title":"[译] Hybrid or Native： 适合工作的才是最好的","tags":["翻译","移动开发","Hybrid App"],"date":"2016-07-15T14:24:37.000Z","create_time":"2016-07-15","pathname":"hybrid-or-native-mobile-app-use-the-right-tool-for-the-job","summary":"译者注：本文讲到的 hybrid &amp; native 可能和我们通常理解的略有差异。文中 native 部分主要讲到的是 NativeScript，这一点可能在一些开发者看来是有争议的。关于 NativeScript，想起来@前端外刊评论 有一篇文章《使用 NativeScript 和 Angular2 构建跨平台 APP》，可以参阅。移动应用开发，何时该用 hybrid，何时又该用 nat..."},{"user":"文蔺","title":"[译] 给 Service Worker 开后门","tags":["翻译","Service Worker"],"date":"2016-07-13T00:00:00.000Z","create_time":"2016-07-13","pathname":"backdoor-service-worker","summary":"在渐进式 Web App 开发峰会(Progressive Web App dev Summit)上展示的时候，我花了差不多 20 分钟讲了这样一点：Alex，你昨天演讲展示了华盛顿邮报(Washington Post)的 AMP （——译者注：Accelerated Mobile Pages Project） demo。轻轻那么一点，华盛顿邮报的 AMP 应用就出来了，还能够通过自定义元素安装..."},{"user":"文蔺","title":"Node.js .sh scripts Manager","tags":["原创","Node.js","命令行工具"],"date":"2016-07-12T00:00:00.000Z","create_time":"2016-07-12","pathname":"Node.js-sh-scripts-Manager","summary":"命令行也有苦恼不知身为前端er的你是不是还在使用 Windows 开发？反正我是。使用 Git？使用 npm scripts？好吧，命令行是少不了的吧？想必很多同学和我一样，使用 Git Bash 作为命令行终端吧。可是每次都要敲，累不累？想想一次简单的 Git 提交需要几个步骤？$ git add -A$ git commit -m \'commit\'$ git push图简便的你可能会在 pac..."},{"user":"文蔺","title":"[译] 测试驱动开发：使用 Node.js 和 MongoDB 构建 Todo API","tags":["翻译","Node.js","测试","单元测试"],"date":"2016-07-04T00:00:00.000Z","create_time":"2016-07-04","pathname":"todo-api-with-unit-test","summary":"学习如何使用测试驱动开发的方式，用 Node.js、MongoDB、Mocha 和 Sinon.js 开发 Todo API。简介测试是软件开发过程中的一个完整部分，它帮助我们提升软件品质。有很多种测试方法，如手动测试，集成测试，功能测试，负载测试，单元测试等等。在本文中，我们将会遵循测试驱动开发的规则编写代码。单元测试是什么？Martin Fowler 将单元测试定义如下：首先一个概念，单元测试..."},{"user":"文蔺","title":"判断资源并行加载完成的三种办法：计数、Promise及 $.Deferred","tags":["原创","开发心得","JavaScript","Promise"],"date":"2016-07-04T00:00:00.000Z","create_time":"2016-07-04","pathname":"when-are-all-resources-all-loaded","summary":"方法一：计数比较function loadImg(url, cb) {    var img = new Image();    img.src = url;    img.onload = cb;}function loadImages(urlArr, afterAllLoadedFunc) {    var count = urlArr.length;    var loadedCount =..."},{"user":"文蔺","title":"使用 ava 和 jsdom 测试前端界面","tags":["原创","测试","JavaScript"],"date":"2016-06-29T00:00:00.000Z","create_time":"2016-06-29","pathname":"test-with-ava-jsdom","summary":"2016-09-03 更新随着在工作学习中更多地接触、使用测试工具，发现自己在本文中的一些记录是不准确、不正确的。今天（九月三日）在家看了 NingJs 的直播，其中有一个分享是关于测试框架的，非常棒，之后有可能的话还是找来视频再学习下。是的，两个月前的理解，是很初级很浅陋的。继续学习，继续钻研吧。交代前因前些天接手了一个旧项目。幸好不是在原来的基础上做些修修改改的工作，可以算是开发新版的。把前面..."},{"user":"文蔺","title":"[译] 防火墙背后的笔记：Web 设计在中国","tags":["翻译","Web Design"],"date":"2016-06-28T00:00:00.000Z","create_time":"2016-06-28","pathname":"notes-from-behind-the-firewall-the-state-of-web-design-in-china","summary":"译者注：本文写作于 2014 年 10 月。本文是《世界各地的 Web 设计(Web Design Across the World)》系列的一部分。随着更多的西方企业将目光投向中国市场，我被问过许多关于为中国客户设计网站的复杂性的问题，还有在中国做电商的技术问题。免责声明：写在前头中国有着难以置信的多样性，社会各阶层之间的鸿沟很大，所以不可能从总体上来说“中国”或“中国人”。不仅是像上海、北京这..."},{"user":"文蔺","title":"[译] 无限滚动加载最佳实践","tags":["翻译","用户体验","JavaScript"],"date":"2016-06-27T00:00:00.000Z","create_time":"2016-06-27","pathname":"infinite-scrolling-best-practices","summary":"无限滚动（Infinite scrolling），有时候被称为无尽滚动（endless scrolling），这种技术允许用户在大量内容上滚动，眼中看不到结束的地方。这种技术很简单，就是页面往下滚动的时候保持刷新。这项技术使用户在没有打断和额外交互的情况下滚动列表 —— 随着用户滚动，一条条的内容就出现了。Facebook 的新闻推送页，Google 的图片搜索，Twitter 的时间线，这些页面..."},{"user":"文蔺","title":"[译] 小两百行 JavaScript 打造 lambda 演算解释器","tags":["翻译","JavaScript"],"date":"2016-06-27T00:00:00.000Z","create_time":"2016-06-27","pathname":"writing-a-lambda-calculus-interpreter-in-javascript","summary":"最近，我发了一条推特，我喜欢上 lambda 演算了，它简单、强大。我当然听说过 lambda 演算，但直到我读了这本书 《类型和编程语言》（Types and Programming Languages） 我才体会到其中美妙。已经有许多编译器/解析器/解释器（compiler / parser / interpreter）的教程，但大多数不会引导你完整实现一种语言，因为实现完全的语言语义，通常需..."},{"user":"文蔺","title":"关于JavaScript 函数传参","tags":["原创","JavaScript","Node.js"],"date":"2016-06-26T00:00:00.000Z","create_time":"2016-06-26","pathname":"javascript-argument","summary":"周五晚上下班回家的路上，突然想到了 CommonJS 规范、Node.js 模块化等等各种东西，然后就想到了熟悉的 module.exports。大约很久之前看 seajs 的文档，文档强调，exports = {/**/} 这种写法是错误的！当时还是小白中的小白，只能一脸懵逼，为嘛不能啊？完全无法理解。请看截图：有没有看到最后的提示？可惜那时候的小白文蔺完全不知道这是什么鬼——更可能的是那会儿就..."},{"user":"文蔺","title":"[译] 客户端存储","tags":["翻译","JavaScript","缓存","Client-Side Storage"],"date":"2016-06-25T00:00:00.000Z","create_time":"2016-06-25","pathname":"client-side-storage","summary":"介绍本文是关于客户端存储（client-side storage）的。这是一个通用术语，包含几个独立但相关的 API： Web Storage、Web SQL Database、Indexed Database 和 File Access。每种技术都提供了在用户硬盘上 —— 而非通常存储数据的服务器 —— 存储数据的独特方式。这么做主要基于以下两点理由：（a）使 web app 离线可用； （b）..."},{"user":"文蔺","title":"[译] Node.js 中的队列","tags":["翻译","Node.js"],"date":"2016-06-25T00:00:00.000Z","create_time":"2016-06-25","pathname":"queues-in-node.js","summary":"这是深入探索 Node.js 中使用工作队列（work queues）管理异步工作流的系列文章的第一篇，来自the Node Patterns series。开始享受吧!很常见的是，在应用程序流中，应用有着可以异步处理的工作负载。一个常见的例子是发送邮件。比方说，新用户注册时，可能需要给 Ta 发送一封确认邮件来确认用户刚刚输入的 email 地址是 Ta 自己的。这包括从模板中生成消息，向电子邮..."},{"user":"文蔺","title":"[译] No WebSockets Over HTTP2","tags":["翻译","HTTP2","WebSocket"],"date":"2016-06-24T00:00:00.000Z","create_time":"2016-06-24","pathname":"no-websockets-over-http2","summary":"译者注： 《深入浅出 Node.js》第七章讲述 WebSocket 服务的构建中，对本文中反复提到的 Upgrade 有比较详细的说明。NO WEBSOCKETS OVER HTTP/2.我这样说的意思是，在 HTTP/2 协议里，无法像在 HTTP/1.1 中把连接（connection）协商或提升为 WebSocket那样，如RFC 6455 所描述的 —— 这个规范（RFC 6455）详述..."},{"user":"文蔺","title":"react-native 开发 App 手记","tags":["原创","react-native","开发心得"],"date":"2016-04-22T00:00:00.000Z","create_time":"2016-04-22","pathname":"app-with-react-native","summary":"做了一个月的 RN。遇到一些问题，陆续记录下来。一些关于组件上的问题不细说了。Android 下的键盘事件监听一直想找安卓下面的键盘事件，可是官方文档（0.22）压根就没提这档子事啊。唯一稍微有点眉目的，就是关于原生模块这里。后来看到了 react-native-keyboard-spacer  这个组件的写法，很傻很天真的以为是需要使用什么 java 或 OC 的支持。于是我决定去看看源码，找到..."},{"user":"文蔺","title":"近来在Firefox上遇到的一些坑","tags":["原创","开发心得"],"date":"2016-03-12T00:00:00.000Z","create_time":"2016-03-12","pathname":"problems-with-firefox","summary":"因为工作一年多以来，做的工作基本都是和 webkit 系列打交道。先是做m站，后来做了两个 app 内嵌的 hybrid 项目，从来只考虑 webkit 前缀和相关的伪类。最近四个多月开始做内部的管理系统，写写样式，偶尔做个 calendar、tree 之类的组件，所有的基本只考虑新版 Chrome。从来没考虑别的问题。最近在帮人解决 firefox 下的一些兼容问题。QA 妹纸提交了一堆 “bu..."},{"user":"文蔺","title":"Chrome和Firefox下的网页截图","tags":["原创","JavaScript","Angular.js","网页截图"],"date":"2016-03-11T00:00:00.000Z","create_time":"2016-03-11","pathname":"screen-shot-upload","summary":"最近在实现一个功能，需求如下：前提：当前页面无弹窗页面任意位置执行粘贴读取剪切板中的截屏数据上传截图首先还是从网上找相关的例子。找到了SF上的专栏文章《js获取剪切板内容，js控制图片粘贴》。于是基于这个，做出了第一版的截图上传功能。由于项目使用的是angularjs，事先已经封装好一套上传图片的办法，只需要调用 $scope.image = blob，自动就会发送、上传该文件。我是半路介入项目的..."},{"user":"文蔺","title":"异步场景下的 js 编程","tags":["原创","slides","Promise"],"date":"2016-01-05T09:41:51.000Z","create_time":"2016-01-05","pathname":"js-promise-slides","summary":"注：下面是近一年前给几位后端同学分享 Promise 时的幻灯。..."},{"user":"文蔺","title":"关于移动端 rem 布局的一些总结","tags":["原创","rem"],"date":"2015-08-31T00:00:00.000Z","create_time":"2015-08-31","pathname":"about-rem-layout","summary":"【资源一】基础知识恕不回顾基础知识参考以下两篇博客：http://isux.tencent.com/web-app-rem.htmlhttp://www.w3cplus.com/css3/define-font-size-with-css3-rem【资源二】淘宝m站首页的动态实现学习http://m.taobao.com 首页的实现。最近读到@大漠的新文章《使用Flexible实现手淘H5页面的终..."},{"user":"文蔺","title":"记一种水平垂直居中的办法","tags":["原创","CSS"],"date":"2015-04-29T00:00:00.000Z","create_time":"2015-04-29","pathname":"vh-center-layout","summary":"又学到了一种水平垂直居中的方法。适用于父级元素只有一个子元素的情况，比如全屏的效果。父级元素：pos-r, w、h设定;子元素：pos-a,w、h设定, t0 b0 l0 r0, m-a。以前只知道 margin: 0 auto 之类的，从来没想到 margin: auto 的妙用...孤陋寡闻了...&lt;!DOCTYPE html&gt;&lt;html lang=\\"zh-CN\\"&gt;&l..."},{"user":"文蔺","title":"某易 2014 校招面试总结","tags":["原创","面试"],"date":"2014-09-24T00:00:00.000Z","create_time":"2014-09-24","pathname":"xease-campus-2014-note","summary":"今天参加了某易的前端开发工程师一面。算是离“前端”这两个字又近了一步吧——好吧，虽然我一面就跪了。其实只是压根儿就没做面试的准备，因为对博主这种“技术爱好者”来说，某易的前端笔试题比某度变态 N 倍（仔细想想其实还是某度的笔试比较有质量），前 22 道选择基本靠蒙，最后居然接到面试通知了。面试问了很多基本的问题。直到面试结束，博主才发现自己为自己挖了无数的坑。唉，都是泪。初次面试的压力之下，面试有..."},{"user":"文蔺","title":"某度 2014 年秋招前端笔试","tags":["原创","面试"],"date":"2014-09-21T00:00:00.000Z","create_time":"2014-09-21","pathname":"xdu-campus-recruitment-2014","summary":"今晚跑去华工参加百度 Web 前端的笔试，做完之后交卷，本来感觉是“为之四顾，为之踌躇满志”的。然而……其中一道题目是关于数组的，回来在电脑上面一敲，顿时为自己的智商和知识羞愧了。多话不说，直接上题目吧。大概是酱紫的：代码如下，请写出输出的结果。 var str = \'john\';var str2 = \'angus\';var arr1 = str.split(\'\');var arr2 = arr1..."}]')}}]);