(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{193:function(t,e,v){"use strict";v.r(e);var _={computed:{data:function(){return{title:"[译] font-display 的使用",description:"font-display 的使用",keywords:"翻译,CSS,性能",pathname:"font-display",translation:{author:"Rob Dodson",social:"https://twitter.com/rob_dodson",from:"https://developers.google.com/web/updates/2016/02/font-display"},create_time:"2017-08-04",prev:{title:"ArrayBuffer and TypedArray in ES2015",pathname:"es2015-arraybuffer"},next:{title:"[译] 事件代理：模式 or 反模式？",pathname:"event-delegation-pattern-or-anti-pattern"}}}}},l=v(3),component=Object(l.a)(_,function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("post",{attrs:{data:t.data}},[v("p",[t._v("进行性能优化时，决定 Web Font 的加载行为是一项技术活。"),v("code",[t._v("@font-face")]),t._v("规则中新增了一个"),v("code",[t._v("font-display")]),t._v("声明，开发者可以根据 Web Font 的加载时间来决定如何渲染或降级处理。")]),t._v(" "),v("h2",{attrs:{id:"-"}},[t._v("字体渲染差异")]),t._v(" "),v("p",[t._v("有了 Web Font，开发者可以在项目中加入丰富的排版功能。但需要权衡的是，下载字体会耗费一些时间。而下载时间难免会受到网络状况的影响，继而干扰用户体验。说实话，如果连页面展示都费劲，谁还会在乎你用多炫的字体呢。")]),t._v(" "),v("p",[t._v("字体下载可能比较慢，为了减轻风险，大多数浏览器都采用了超时处理。一旦超时，就使用后备字体。理想很美好，现实很无奈，浏览器在实现上各有自己的一套。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("Browser")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("Timeout")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("Fallback")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("Swap")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("Chrome 35+")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("3 seconds")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("Opera")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("3 seconds")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("Firefox")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("3 seconds")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("Internet Explorer")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0 seconds")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("Safari")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("No timeout")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("N/A")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("N/A")])])])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("Chrome 和 Firefox 超时时间为 3 秒，超时后使用后备字体。若字体最终勉强加载成功，它将替换后备字体，重新渲染文本。")])]),t._v(" "),v("li",[v("p",[t._v("IE 浏览器超时时间为 0 秒，也就是说，会立即渲染文本。若所请求的字体尚不可用，则使用后备字体。一旦请求字体可用，将重新渲染文本。")])]),t._v(" "),v("li",[v("p",[t._v("Safari 没有超时行为（或者说，至少在基准网络超时之前什么也没干）。")])])]),t._v(" "),v("p",[t._v("更糟糕的是，这些规则对应用造成的影响，在很大程度上不受开发者控制。关注性能的开发者也许更乐意使用后备字体，使网页内容更快地展现，当更美观的 Web Font 下载完成后再加以使用。使用 Font Loading API 之类的工具，可以覆盖浏览器的某些默认行为，提升性能。但这将引入额外的 JavaScript 代码 —— 要么把代码内联到页面中；要么请求外部文件，而这可能带来额外的 HTTP 延时。")]),t._v(" "),v("p",[t._v("CSS 工作组为此提出了新方案：为"),v("code",[t._v("@font-face")]),t._v("增加新的"),v("code",[t._v("font-display")]),t._v("声明，用于控制字体下载完成之前的渲染行为。")]),t._v(" "),v("h2",{attrs:{id:"-"}},[t._v("字体下载时间轴")]),t._v(" "),v("p",[t._v("与一些浏览器目前使用的字体超时行为类似，"),v("code",[t._v("font-display")]),t._v("将字体下载过程划分为三个阶段。")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("首先是字体阻塞阶段（font block period）。在此期间，如果字体未完成加载，则尝试使用它的任何元素必须以不可见的后备字体形式呈现；否则正常使用该字体。")])]),t._v(" "),v("li",[v("p",[t._v("紧接着字体阻塞阶段的是字体交换阶段（font swap period）。在此期间，如果字体未完成加载，则尝试使用它的任何元素必须使用后备字体进行渲染；否则正常使用该字体。")])]),t._v(" "),v("li",[v("p",[t._v("紧接着是字体故障阶段（font failure period）。此时若字体未完成加载，则将其标记为下载失败，并使用常规后备字体；否则正常使用该字体。")])])]),t._v(" "),v("p",[t._v("理解以上三个阶段，根据字体是否下载成功、何时下载完成等情况，就可以可以使用"),v("code",[t._v("font-display")]),t._v("来决定如何渲染字体了。")]),t._v(" "),v("h2",{attrs:{id:"-font-display-"}},[t._v("使用哪种 font-display 值？")]),t._v(" "),v("p",[t._v("要使用"),v("code",[t._v("font-display")]),t._v("，请在"),v("code",[t._v("@font-face")]),t._v("规则中添加代码：")]),t._v(" "),v("pre",[v("code",{staticClass:"hljs lang-css"},[t._v("@"),v("span",{staticClass:"hljs-keyword"},[t._v("font-face")]),t._v(" {\n  "),v("span",{staticClass:"hljs-attribute"},[t._v("font-family")]),t._v(":  "),v("span",{staticClass:"hljs-string"},[t._v("'Arvo'")]),t._v(";\n  "),v("span",{staticClass:"hljs-attribute"},[t._v("font-display")]),t._v(":  auto;\n  "),v("span",{staticClass:"hljs-attribute"},[t._v("src")]),t._v(":  "),v("span",{staticClass:"hljs-built_in"},[t._v("local")]),t._v("("),v("span",{staticClass:"hljs-string"},[t._v("'Arvo'")]),t._v("), "),v("span",{staticClass:"hljs-built_in"},[t._v("url")]),t._v("(https://fonts.gstatic.com/s/arvo/v9/rC7kKhY-eUDY-ucISTIf5PesZW2xOQ-xsNqO47m55DA.woff2) "),v("span",{staticClass:"hljs-built_in"},[t._v("format")]),t._v("("),v("span",{staticClass:"hljs-string"},[t._v("'woff2'")]),t._v(");\n}")])]),v("p",[t._v("目前，"),v("code",[t._v("font-display")]),t._v("支持"),v("code",[t._v("auto | block | swap | fallback | optional")]),t._v("五种值。")]),t._v(" "),v("h3",{attrs:{id:"auto"}},[t._v("auto")]),t._v(" "),v("p",[v("code",[t._v("auto")]),t._v("使用的字体展示策略与浏览器一致。当前，大多数浏览器使用的默认策略类似"),v("code",[t._v("block")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"block"}},[t._v("block")]),t._v(" "),v("p",[v("code",[t._v("block")]),t._v("给予字体一个较短的阻塞时间（大多数情况下推荐使用 3s）和无限大的交换时间。换言之，如果字体未加载完成，浏览器将首先绘制“隐形”文本；一旦字体加载完成，立即切换字体。为此，浏览器将创建一个匿名字体，其类型与所选字体相似，但所有字形都不含“墨水”。使用特定字体渲染文本之后页面方才可用，只有这种情况下才应该使用 "),v("code",[t._v("block")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"swap"}},[t._v("swap")]),t._v(" "),v("p",[t._v("使用 "),v("code",[t._v("swap")]),t._v("，则阻塞阶段时间为 0，交换阶段时间无限大。也就是说，如果字体没有完成加载，浏览器会立即绘制文字，一旦字体加载成功，立即切换字体。与 "),v("code",[t._v("block")]),t._v(" 类似，如果使用特定字体渲染文本对页面很重要，且使用其他字体渲染仍将显示正确的信息，才应使用 "),v("code",[t._v("swap")]),t._v("。Logo 文字就很适合使用 "),v("code",[t._v("swap")]),t._v("，因为以合理的后备字体显示公司名称仍将正确传递信息，而且最终会以官方字体的样式展现。")]),t._v(" "),v("h3",{attrs:{id:"fallback"}},[t._v("fallback")]),t._v(" "),v("p",[t._v("使用 "),v("code",[t._v("fallback")]),t._v("时，阻塞阶段时间将非常小（多数情况下推荐小于 100ms），交换阶段也比较短（多数情况下建议使用 3 秒钟）。换言之，如果字体没有加载，则首先会使用后备字体渲染。一旦加载成功，就会切换字体。但如果等待时间过久，则页面将一直使用后备字体。如果希望用户尽快开始阅读，而且不因新字体的载入导致文本样式发生变动而干扰用户体验，"),v("code",[t._v("fallback")]),t._v(" 是一个很好的选择。举个例子，正文文本就符合这个条件。")]),t._v(" "),v("h3",{attrs:{id:"optional"}},[t._v("optional")]),t._v(" "),v("p",[t._v("使用 optional 时，阻塞阶段时间会非常小（多数情况下建议低于 100ms），交换阶段时间为 0。与 "),v("code",[t._v("fallback")]),t._v(" 类似，如果字体能够为页面效果增色不少，但并非特别重要时，使用 "),v("code",[t._v("optional")]),t._v(" 正好。使用 "),v("code",[t._v("optional")]),t._v(" 时，将由浏览器来决定是否开始下载字体。可以不下载，也可以给予字体较低的优先级，一切取决于浏览器是否认为对用户最有利。当用户处于弱网络下，这是非常有用的，下载字体可能并非对资源最好的利用。")]),t._v(" "),v("h2",{attrs:{id:"-"}},[t._v("浏览器支持")]),t._v(" "),v("p",[t._v("启用 Chrome 49 桌面版、Opera 或 Opera for Android的 “Experimental Web Platform Features flag” 后可以使用 "),v("code",[t._v("font-display")]),t._v("。（译者注：该文发表于 2016 年。根据译者 2017 年 8 月 4 日访问"),v("a",{attrs:{href:"http://caniuse.com/#search=font-display",target:"_blank"}},[t._v("caniuse")]),t._v("获取的信息，Chrome 60 正式引入 "),v("code",[t._v("font-display")]),t._v("。）")]),t._v(" "),v("h2",{attrs:{id:"demo"}},[t._v("Demo")]),t._v(" "),v("p",[t._v("点击"),v("a",{attrs:{href:"https://jsbin.com/nigahi/latest/edit?html,output",target:"_blank"}},[t._v("链接")]),t._v("可以查看"),v("code",[t._v("font-display")]),t._v("的效果。对关注性能的开发者来说，"),v("code",[t._v("font-display")]),t._v(" 可是相当有用的工具啊！")])])},[],!1,null,null,null);e.default=component.exports}}]);