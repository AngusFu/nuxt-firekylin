(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{176:function(t,n,e){"use strict";e.r(n);var _={computed:{data:function(){return{title:"[译] Fetch 请求的本地缓存",description:"Fetch 请求的本地缓存",keywords:"翻译,JavaScript,优化,缓存",pathname:"cache-fetched-ajax-requests",translation:{author:"Peter Bengtsson",social:"https://twitter.com/peterbe",from:"https://www.sitepoint.com/cache-fetched-ajax-requests/"},create_time:"2016-08-27",prev:{title:"[译] 渐进增强的键盘导航",pathname:"better-keyboard-navigation-with-progressive-enhancement"},next:{title:"[译] 渐进式 Web App 的离线存储",pathname:"offline-storage-for-progressive-web-apps"}}}}},l=e(3),component=Object(l.a)(_,function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("post",{attrs:{data:t.data}},[e("p",[e("strong",[t._v("本文展示了如何使用实现 fetch 请求的本地缓存")]),t._v("，遇到重复请求时，将会从 sessionStorage 中读取数据。这样做的好处是，无需为每个需要缓存的资源编写自定义代码。")]),t._v(" "),e("p",[t._v("如果你想在 JavaScript 盛会中露露脸，秀秀如何玩转 Promise、最前沿的 API 和 localStorage，那就接着往下看吧。")]),t._v(" "),e("h2",{attrs:{id:"fetch-api"}},[t._v("Fetch API")]),t._v(" "),e("p",[t._v("此时此刻，你对 "),e("a",{attrs:{href:"https://www.sitepoint.com/introduction-to-the-fetch-api/",target:"_blank"}},[t._v("fetch")]),t._v(" 可能已经很熟悉了。它是浏览器提供的用以替代旧版的"),e("code",[t._v("XMLHttpRequest")]),t._v("的原生 API。")]),t._v(" "),e("caniuse",{attrs:{src:"/caniuse/embed.html?feat=fetch&periods=future_1,current,past_1,past_2"}}),t._v(" "),e("p",[t._v("并非所有浏览器都完美支持 fetch，但你可以使用 "),e("a",{attrs:{href:"https://github.com/github/fetch",target:"_blank"}},[t._v("GitHub 上的 fetch polyfill")]),t._v("（如果没事做，可以看看 "),e("a",{attrs:{href:"https://fetch.spec.whatwg.org/",target:"_blank"}},[t._v("Fetch 标准")]),t._v("）。")]),t._v(" "),e("h2",{attrs:{id:"-"}},[t._v("原始替代版本")]),t._v(" "),e("p",[t._v("做个假设，我们准确了解需要下载的那个资源，并且只想下载一次。可以使用全局变量作为缓存，像下面这样：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" origin = "),e("span",{staticClass:"hljs-literal"},[t._v("null")]),t._v("\nfetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/get'")]),t._v(")\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.json())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("information")]),t._v(" =>")]),t._v(" {\n    origin = information.origin  "),e("span",{staticClass:"hljs-comment"},[t._v("// your client's IP")]),t._v("\n  })\n\n"),e("span",{staticClass:"hljs-comment"},[t._v("// 需要延时以确保 fetch 完成")]),t._v("\nsetTimeout("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("()")]),t._v(" =>")]),t._v(" {\n  "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Your origin is '")]),t._v(" + origin)\n}, "),e("span",{staticClass:"hljs-number"},[t._v("3000")]),t._v(")")])]),e("p",[e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/QEPEpB?editors=0010#0",target:"_blank"}},[t._v("On CodePen")])]),t._v(" "),e("p",[t._v("上面使用了全局变量来保存缓存的数据。马上可以发现问题，一旦刷新页面或者跳转到其他页面，缓存的数据就消失了。")]),t._v(" "),e("p",[t._v("在剖析这个办法的短板之前，先将解决方案升级下。")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[t._v("fetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/get'")]),t._v(")\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.json())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("info")]),t._v(" =>")]),t._v(" {\n    sessionStorage.setItem("),e("span",{staticClass:"hljs-string"},[t._v("'information'")]),t._v(", "),e("span",{staticClass:"hljs-built_in"},[t._v("JSON")]),t._v(".stringify(info))\n  })\n\n"),e("span",{staticClass:"hljs-comment"},[t._v("// 需要延时以确保 fetch 完成")]),t._v("\nsetTimeout("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("()")]),t._v(" =>")]),t._v(" {\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" info = "),e("span",{staticClass:"hljs-built_in"},[t._v("JSON")]),t._v(".parse(sessionStorage.getItem("),e("span",{staticClass:"hljs-string"},[t._v("'information'")]),t._v("))\n  "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Your origin is '")]),t._v(" + info.origin)\n}, "),e("span",{staticClass:"hljs-number"},[t._v("3000")]),t._v(")")])]),e("p",[e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/zBXBwg?editors=0010#0",target:"_blank"}},[t._v("On CodePen")])]),t._v(" "),e("p",[t._v("第一个问题是，"),e("code",[t._v("fetch")]),t._v(" 是基于 Promise 的，意味着我们无法准确知晓 fetch 何时完成，因此在 fetch 完成之前，我们不能依赖它的执行。")]),t._v(" "),e("p",[t._v("第二个问题是，该解决方案详细指定了 URL 和缓存的内容（本例中的 "),e("code",[t._v("information")]),t._v("）。我们需要一个基于 URL 的通用解决方案。")]),t._v(" "),e("h2",{attrs:{id:"-"}},[t._v("第一次的简单实现")]),t._v(" "),e("p",[t._v("在 "),e("code",[t._v("fetch")]),t._v("外面再包装一层，同样也返回 Promise。调用该方法时，我们并不关心结果是来源于网络还是本地缓存。")]),t._v(" "),e("p",[t._v("之前你可能是这样做的：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[t._v("fetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/get'")]),t._v(")\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.json())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("issues")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Your origin is '")]),t._v(" + info.origin)\n  })")])]),e("p",[e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/pbBbwQ?editors=0011",target:"_blank"}},[t._v("On CodePen")])]),t._v(" "),e("p",[t._v("现在加上一层包装，重复的网络请求可以通过本地缓存进行优化。我们将这个包装过的方法简单称作 "),e("code",[t._v("cachedFetch")]),t._v("，代码如下：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[t._v("cachedFetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/get'")]),t._v(")\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.json())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("info")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Your origin is '")]),t._v(" + info.origin)\n  })")])]),e("p",[t._v("该方法首次运行的时候，需要发出网络请求，并将结果缓存下来。第二次请求时，则会直接从本地存储中取出数据。")]),t._v(" "),e("p",[t._v("首先试试简单地将 "),e("code",[t._v("fetch")]),t._v(" 包装下：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[e("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" cachedFetch = "),e("span",{staticClass:"hljs-function"},[t._v("("),e("span",{staticClass:"hljs-params"},[t._v("url, options")]),t._v(") =>")]),t._v(" {\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" fetch(url, options)\n}")])]),e("p",[e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/kXmXwm?editors=0010#0",target:"_blank"}},[t._v("On CodePen")])]),t._v(" "),e("p",[t._v("这当然能工作，不过没什么用。接下来，来实现获取数据的"),e("strong",[t._v("存储")]),t._v("。")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[e("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" cachedFetch = "),e("span",{staticClass:"hljs-function"},[t._v("("),e("span",{staticClass:"hljs-params"},[t._v("url, options")]),t._v(") =>")]),t._v(" {\n  "),e("span",{staticClass:"hljs-comment"},[t._v("// 将 URL 作为 sessionStorage 的 key")]),t._v("\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" cacheKey = url\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" fetch(url, options).then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("response")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-comment"},[t._v("// 仅在结果为 JSON 或其他非二进制数据情况下缓存结果")]),t._v("\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" ct = response.headers.get("),e("span",{staticClass:"hljs-string"},[t._v("'Content-Type'")]),t._v(")\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (ct && (ct.match("),e("span",{staticClass:"hljs-regexp"},[t._v("/application\\/json/i")]),t._v(") || ct.match("),e("span",{staticClass:"hljs-regexp"},[t._v("/text\\//i")]),t._v("))) {\n      "),e("span",{staticClass:"hljs-comment"},[t._v("// 当然，除了 .text()，也有 .json() 方法")]),t._v("\n      "),e("span",{staticClass:"hljs-comment"},[t._v("// 不过结果最终还是会以字符串形式存在 sessionStorage 中")]),t._v("\n      "),e("span",{staticClass:"hljs-comment"},[t._v("// 如果不克隆 response，在其返回时就会被使用")]),t._v("\n      "),e("span",{staticClass:"hljs-comment"},[t._v("// 这里用这种方式，保持非入侵性")]),t._v("\n      response.clone().text().then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("content")]),t._v(" =>")]),t._v(" {\n        sessionStorage.setItem(cacheKey, content)\n      })\n    }\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" response\n  })\n}")])]),e("p",[e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/yJAJok?editors=0012",target:"_blank"}},[t._v("On CodePen")])]),t._v(" "),e("p",[t._v("上面发生了不少事。")]),t._v(" "),e("p",[e("code",[t._v("fetch")]),t._v(" 所返回的首个 Promise 实际上还是径直发出了 GET 请求。注意如果有 CORS（Cross-Origin Resource Sharing，跨域资源共享）的问题，"),e("code",[t._v(".text()")]),t._v("、"),e("code",[t._v(".json()")]),t._v(" 、"),e("code",[t._v(".blob()")]),t._v(" 这些方法不会工作。")]),t._v(" "),e("p",[t._v("最有意思的点在于，我们需要"),e("em",[t._v("克隆")]),t._v("首个 Promise 返回的 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Response/clone",target:"_blank"}},[t._v("Response")]),t._v(" 对象。如果不这样做，我们就介入过多，当该 Promise 的最终使用者调用如 "),e("code",[t._v(".json()")]),t._v(" 这些方法时，会得到如下错误：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[e("span",{staticClass:"hljs-built_in"},[t._v("TypeError")]),t._v(": Body has already been consumed.")])]),e("p",[t._v("另外需要注意的一点是，需要注意响应类型：我们只存储状态码为 "),e("code",[t._v("200")]),t._v(" "),e("em",[t._v("且")]),t._v("内容类型为 "),e("code",[t._v("application/json")]),t._v(" 或 "),e("code",[t._v("text/*")]),t._v("的响应。因为 "),e("code",[t._v("sessionStorage")]),t._v(" 只能存储文本数据。")]),t._v(" "),e("p",[t._v("下面是使用示例：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[t._v("cachedFetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/get'")]),t._v(")\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.json())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("info")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Your origin is '")]),t._v(" + info.origin)\n  })\n\ncachedFetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/html'")]),t._v(")\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.text())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("document")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Document has '")]),t._v(" + "),e("span",{staticClass:"hljs-built_in"},[t._v("document")]),t._v(".match("),e("span",{staticClass:"hljs-regexp"},[t._v("/<p>/")]),t._v(").length + "),e("span",{staticClass:"hljs-string"},[t._v("' paragraphs'")]),t._v(")\n  })\n\ncachedFetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/image/png'")]),t._v(")\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.blob())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("image")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Image is '")]),t._v(" + image.size + "),e("span",{staticClass:"hljs-string"},[t._v("' bytes'")]),t._v(")\n  })")])]),e("p",[t._v("让人喜欢的是，这个解决方案到目前为止可以正常工作，也不会干扰 JSON "),e("em",[t._v("与")]),t._v(" HTML 请求。当数据为图片的时候，它也不会试图将其存在 "),e("code",[t._v("sessionStorage")]),t._v(" 中。")]),t._v(" "),e("h2",{attrs:{id:"-"}},[t._v("真实返回命中缓存的第二次实现")]),t._v(" "),e("p",[t._v("我们的第一次实现，仅仅只关心响应结果的"),e("strong",[t._v("存储")]),t._v("。当你第二次调用 "),e("code",[t._v("cachedFetch")]),t._v(" 时，并未试着从 "),e("code",[t._v("sessionStorage")]),t._v(" 中"),e("em",[t._v("检索")]),t._v("任何内容。我们要做的，首先是返回一个 Promise，它需要返回一个 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Response/Response",target:"_blank"}},[t._v("Response 对象")]),t._v("。")]),t._v(" "),e("p",[t._v("先看下最基本的实现：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[e("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" cachedFetch = "),e("span",{staticClass:"hljs-function"},[t._v("("),e("span",{staticClass:"hljs-params"},[t._v("url, options")]),t._v(") =>")]),t._v(" {\n  "),e("span",{staticClass:"hljs-comment"},[t._v("// 将 URL 作为 sessionStorage 的 key")]),t._v("\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" cacheKey = url\n\n  "),e("span",{staticClass:"hljs-comment"},[t._v("// 命中缓存的新代码开始")]),t._v("\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" cached = sessionStorage.getItem(cacheKey)\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (cached !== "),e("span",{staticClass:"hljs-literal"},[t._v("null")]),t._v(") {\n    "),e("span",{staticClass:"hljs-comment"},[t._v("// it was in sessionStorage! Yay!")]),t._v("\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" response = "),e("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" Response("),e("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" Blob([cached]))\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" "),e("span",{staticClass:"hljs-built_in"},[t._v("Promise")]),t._v(".resolve(response)\n  }\n  "),e("span",{staticClass:"hljs-comment"},[t._v("// 命中缓存的新代码结束")]),t._v("\n\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" fetch(url, options).then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("response")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-comment"},[t._v("// 仅在结果为 JSON 或其他非二进制数据情况下缓存结果")]),t._v("\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (response.status === "),e("span",{staticClass:"hljs-number"},[t._v("200")]),t._v(") {\n      "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" ct = response.headers.get("),e("span",{staticClass:"hljs-string"},[t._v("'Content-Type'")]),t._v(")\n      "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (ct && (ct.match("),e("span",{staticClass:"hljs-regexp"},[t._v("/application\\/json/i")]),t._v(") || ct.match("),e("span",{staticClass:"hljs-regexp"},[t._v("/text\\//i")]),t._v("))) {\n        "),e("span",{staticClass:"hljs-comment"},[t._v("// 当然，除了 .text()，也有 .json() 方法")]),t._v("\n        "),e("span",{staticClass:"hljs-comment"},[t._v("// 不过结果最终还是会以字符串形式存在 sessionStorage 中")]),t._v("\n        "),e("span",{staticClass:"hljs-comment"},[t._v("// 如果不克隆 response，在其返回时就会被使用")]),t._v("\n        "),e("span",{staticClass:"hljs-comment"},[t._v("// 这里用这种方式，保持非入侵性")]),t._v("\n        response.clone().text().then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("content")]),t._v(" =>")]),t._v(" {\n          sessionStorage.setItem(cacheKey, content)\n        })\n      }\n    }\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" response\n  })\n}")])]),e("p",[e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/qNwNPb?editors=0012",target:"_blank"}},[t._v("On CodePen")])]),t._v(" "),e("p",[t._v("这已经可以工作了！")]),t._v(" "),e("p",[t._v("打开 "),e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/qNwNPb?editors=0012",target:"_blank"}},[t._v("CodePen")]),t._v(" 查看上面代码的实际效果，记得开启浏览器开发者工具中的  Network tab。多点几次 “Run” 按钮（CodePen 的右上角），可以发现，只有图片被反复请求。")]),t._v(" "),e("p",[t._v("本解决方案的好处是避免了“意面式回调”（callback spaghetti）。"),e("code",[t._v("sessionStorage.getItem")]),t._v(" 的调用是同步的（也就是阻塞的），所以在 Promise 或者回调中无需应对“它在本地存储中是否存在？”这种问题。只要有内容，就返回缓存结果。否则就按正常逻辑执行。")]),t._v(" "),e("h2",{attrs:{id:"-"}},[t._v("考虑失效时间的第三次实现")]),t._v(" "),e("p",[t._v("到目前为止我们一直在使用 "),e("code",[t._v("sessionStorage")]),t._v("，它有点像 "),e("code",[t._v("localStorage")]),t._v("，除了在"),e("strong",[t._v("打开新页面")]),t._v("时会被清除这一点。这意味着我们在使用一种“自然形式”，内容不会缓存很久。如果要使用 "),e("code",[t._v("localStorage")]),t._v(" 来缓存内容，那就算远程内容改变了，浏览器还是会“永远”卡在本地内容。这太糟糕了。")]),t._v(" "),e("p",[t._v("更好的解决办法是提供"),e("em",[t._v("用户")]),t._v("控制。（这里的用户指的是使用 "),e("code",[t._v("cachedFetch")]),t._v(" 函数的 Web 开发者。）就像 Memcached 或 Redis 这些服务端存储一样，我们可以指定缓存的使用期。")]),t._v(" "),e("p",[t._v("例如在 Python (with Flask) 中：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-bash"},[t._v(">>> from werkzeug.contrib.cache import MemcachedCache\n>>> cache = MemcachedCache(["),e("span",{staticClass:"hljs-string"},[t._v("'127.0.0.1:11211'")]),t._v("])\n>>> cache.set("),e("span",{staticClass:"hljs-string"},[t._v("'key'")]),t._v(", "),e("span",{staticClass:"hljs-string"},[t._v("'value'")]),t._v(", 10)\nTrue\n>>> cache.get("),e("span",{staticClass:"hljs-string"},[t._v("'key'")]),t._v(")\n"),e("span",{staticClass:"hljs-string"},[t._v("'value'")]),t._v("\n>>> "),e("span",{staticClass:"hljs-comment"},[t._v("# waiting 10 seconds")]),t._v("\n...\n>>> cache.get("),e("span",{staticClass:"hljs-string"},[t._v("'key'")]),t._v(")\n>>>")])]),e("p",[t._v("对此，目前 "),e("code",[t._v("sessionStorage")]),t._v(" 和 "),e("code",[t._v("localStorage")]),t._v(" 都没有内建的功能实现，所以需要自己手动来实现。通过对比存储与缓存命中时的时间戳，可以达成目的。")]),t._v(" "),e("p",[t._v("在此之前，先看看大概应该长什么样子：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[e("span",{staticClass:"hljs-comment"},[t._v("// 使用默认过期时间，如 5 min")]),t._v("\ncachedFetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/get'")]),t._v(")\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.json())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("info")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Your origin is '")]),t._v(" + info.origin)\n  })\n\n"),e("span",{staticClass:"hljs-comment"},[t._v("// 传递以秒为单位的数值")]),t._v("\ncachedFetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/get'")]),t._v(", "),e("span",{staticClass:"hljs-number"},[t._v("2")]),t._v(" * "),e("span",{staticClass:"hljs-number"},[t._v("60")]),t._v(")  "),e("span",{staticClass:"hljs-comment"},[t._v("// 2 min")]),t._v("\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.json())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("info")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Your origin is '")]),t._v(" + info.origin)\n  })\n\n"),e("span",{staticClass:"hljs-comment"},[t._v("// 和  fetch 选项放在一起，使用自定义的名字")]),t._v("\n"),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" init = {\n  "),e("span",{staticClass:"hljs-attr"},[t._v("mode")]),t._v(": "),e("span",{staticClass:"hljs-string"},[t._v("'same-origin'")]),t._v(",\n  "),e("span",{staticClass:"hljs-attr"},[t._v("seconds")]),t._v(": "),e("span",{staticClass:"hljs-number"},[t._v("3")]),t._v(" * "),e("span",{staticClass:"hljs-number"},[t._v("60")]),t._v(" "),e("span",{staticClass:"hljs-comment"},[t._v("// 3 min")]),t._v("\n}\ncachedFetch("),e("span",{staticClass:"hljs-string"},[t._v("'https://httpbin.org/get'")]),t._v(", init)\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("r")]),t._v(" =>")]),t._v(" r.json())\n  .then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("info")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),e("span",{staticClass:"hljs-string"},[t._v("'Your origin is '")]),t._v(" + info.origin)\n  })")])]),e("p",[t._v("最重要的来了，每次保存响应数据的时候，"),e("em",[t._v("也")]),t._v("需要记录"),e("em",[t._v("何时")]),t._v("存储的。现在我们也可以切换到 "),e("code",[t._v("localStorage")]),t._v(" 上了。代码会保证我们不会命中过期的缓存，在 "),e("code",[t._v("localStorage")]),t._v(" 中内容原本是持久化的。")]),t._v(" "),e("p",[t._v("下面是最终的解决方案：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[e("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" cachedFetch = "),e("span",{staticClass:"hljs-function"},[t._v("("),e("span",{staticClass:"hljs-params"},[t._v("url, options")]),t._v(") =>")]),t._v(" {\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" expiry = "),e("span",{staticClass:"hljs-number"},[t._v("5")]),t._v(" * "),e("span",{staticClass:"hljs-number"},[t._v("60")]),t._v(" "),e("span",{staticClass:"hljs-comment"},[t._v("// 默认 5 min")]),t._v("\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" ("),e("span",{staticClass:"hljs-keyword"},[t._v("typeof")]),t._v(" options === "),e("span",{staticClass:"hljs-string"},[t._v("'number'")]),t._v(") {\n    expiry = options\n    options = "),e("span",{staticClass:"hljs-literal"},[t._v("undefined")]),t._v("\n  } "),e("span",{staticClass:"hljs-keyword"},[t._v("else")]),t._v(" "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" ("),e("span",{staticClass:"hljs-keyword"},[t._v("typeof")]),t._v(" options === "),e("span",{staticClass:"hljs-string"},[t._v("'object'")]),t._v(") {\n    "),e("span",{staticClass:"hljs-comment"},[t._v("// 但愿你别设置为 0")]),t._v("\n    expiry = options.seconds || expiry\n  }\n  "),e("span",{staticClass:"hljs-comment"},[t._v("// 将 URL 作为 localStorage 的 key")]),t._v("\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" cacheKey = url\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" cached = localStorage.getItem(cacheKey)\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" whenCached = localStorage.getItem(cacheKey + "),e("span",{staticClass:"hljs-string"},[t._v("':ts'")]),t._v(")\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (cached !== "),e("span",{staticClass:"hljs-literal"},[t._v("null")]),t._v(" && whenCached !== "),e("span",{staticClass:"hljs-literal"},[t._v("null")]),t._v(") {\n    "),e("span",{staticClass:"hljs-comment"},[t._v("// 耶！ 它在 localStorage 中")]),t._v("\n    "),e("span",{staticClass:"hljs-comment"},[t._v("// 尽管 'whenCached' 是字符串")]),t._v("\n    "),e("span",{staticClass:"hljs-comment"},[t._v("// 但减号运算符会将其转换为数字")]),t._v("\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" age = ("),e("span",{staticClass:"hljs-built_in"},[t._v("Date")]),t._v(".now() - whenCached) / "),e("span",{staticClass:"hljs-number"},[t._v("1000")]),t._v("\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (age < expiry) {\n      "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" response = "),e("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" Response("),e("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" Blob([cached]))\n      "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" "),e("span",{staticClass:"hljs-built_in"},[t._v("Promise")]),t._v(".resolve(response)\n    } "),e("span",{staticClass:"hljs-keyword"},[t._v("else")]),t._v(" {\n      "),e("span",{staticClass:"hljs-comment"},[t._v("// 清除旧值")]),t._v("\n      localStorage.removeItem(cacheKey)\n      localStorage.removeItem(cacheKey + "),e("span",{staticClass:"hljs-string"},[t._v("':ts'")]),t._v(")\n    }\n  }\n\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" fetch(url, options).then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("response")]),t._v(" =>")]),t._v(" {\n    "),e("span",{staticClass:"hljs-comment"},[t._v("// 仅在结果为 JSON 或其他非二进制数据情况下缓存结果")]),t._v("\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (response.status === "),e("span",{staticClass:"hljs-number"},[t._v("200")]),t._v(") {\n      "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" ct = response.headers.get("),e("span",{staticClass:"hljs-string"},[t._v("'Content-Type'")]),t._v(")\n      "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (ct && (ct.match("),e("span",{staticClass:"hljs-regexp"},[t._v("/application\\/json/i")]),t._v(") || ct.match("),e("span",{staticClass:"hljs-regexp"},[t._v("/text\\//i")]),t._v("))) {\n        "),e("span",{staticClass:"hljs-comment"},[t._v("// 当然，除了 .text()，也有 .json() 方法")]),t._v("\n        "),e("span",{staticClass:"hljs-comment"},[t._v("// 不过结果最终还是会以字符串形式存在 sessionStorage 中")]),t._v("\n        "),e("span",{staticClass:"hljs-comment"},[t._v("// 如果不克隆 response，在其返回时就会被使用")]),t._v("\n        "),e("span",{staticClass:"hljs-comment"},[t._v("// 这里用这种方式，保持非入侵性")]),t._v("\n        response.clone().text().then("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("content")]),t._v(" =>")]),t._v(" {\n          localStorage.setItem(cacheKey, content)\n          localStorage.setItem(cacheKey+"),e("span",{staticClass:"hljs-string"},[t._v("':ts'")]),t._v(", "),e("span",{staticClass:"hljs-built_in"},[t._v("Date")]),t._v(".now())\n        })\n      }\n    }\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" response\n  })\n}")])]),e("p",[e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/KrYrXA?editors=0012",target:"_blank"}},[t._v("On CodePen")])]),t._v(" "),e("h2",{attrs:{id:"-"}},[t._v("未来更好、更理想、更酷的实现")]),t._v(" "),e("p",[t._v("我们在避免过度变动 Web API，最棒的是 "),e("code",[t._v("localStorage")]),t._v(" 可比依赖网络快得多了。看看这篇文章对 "),e("code",[t._v("localStorage")]),t._v(" 和 XHR 的比较： "),e("a",{attrs:{href:"https://www.peterbe.com/plog/localforage-vs.-xhr",target:"_blank"}},[t._v("localForage vs. XHR")]),t._v("。它还衡量了其他内容，但得出基本结论，"),e("code",[t._v("localStorage")]),t._v(" 确实很快，磁盘缓存热身（disk-cache warm-ups，？不知如何翻译，请读者赐教）也很少出现。")]),t._v(" "),e("p",[t._v("接下来，我们还能怎样改进方案呢？")]),t._v(" "),e("h3",{attrs:{id:"-"}},[t._v("处理二进制响应")]),t._v(" "),e("p",[t._v("我们的实现没有考虑缓存非文本的内容，如图片等等，但这并非不可能。需要一些更多的代码。特别的，我们可能想存储更多关于 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Blob",target:"_blank"}},[t._v("Blob")]),t._v(" 的信息。从根本上说，所有响应都是 Blob。对文本和 JSON 来说，它只是字符串数组，"),e("code",[t._v("type")]),t._v(" 和 "),e("code",[t._v("size")]),t._v(" 并不真正那么重要，因为从字符串本身就能识别出来。对二进制内容而言，需要将它们转换为 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank"}},[t._v("ArrayBuffer")]),t._v("。")]),t._v(" "),e("p",[t._v("关注更多内容，请看 "),e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/XKQKZv?editors=1010#0",target:"_blank"}},[t._v("CodePen")]),t._v(" 上支持图片的实现。")]),t._v(" "),e("h3",{attrs:{id:"-"}},[t._v("使用哈希键值缓存")]),t._v(" "),e("p",[t._v("另外一点潜在的优化点是对用作 key 的每个 URL 进行哈希处理，使其变得更小，以空间换取速度（trade space for speed）。在上面的例子中，我们使用了很多非常短小整洁的 URL（如 "),e("code",[t._v("https://httpbin.org/get")]),t._v("），但如果你使用了大量的带有很多查询字符串的长 URL，这样做就很有意义了。")]),t._v(" "),e("p",[t._v("办法之一是使用"),e("a",{attrs:{href:"http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/",target:"_blank"}},[t._v("这个不错的算法")]),t._v("，以其安全快速而知名：")]),t._v(" "),e("pre",[e("code",{staticClass:"hljs lang-javascript"},[e("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" hashstr = "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[t._v("s")]),t._v(" =>")]),t._v(" {\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" hash = "),e("span",{staticClass:"hljs-number"},[t._v("0")]),t._v(";\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (s.length == "),e("span",{staticClass:"hljs-number"},[t._v("0")]),t._v(") "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" hash;\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("for")]),t._v(" ("),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" i = "),e("span",{staticClass:"hljs-number"},[t._v("0")]),t._v("; i < s.length; i++) {\n    "),e("span",{staticClass:"hljs-keyword"},[t._v("let")]),t._v(" char = s.charCodeAt(i);\n    hash = ((hash<<"),e("span",{staticClass:"hljs-number"},[t._v("5")]),t._v(")-hash)+char;\n    hash = hash & hash; "),e("span",{staticClass:"hljs-comment"},[t._v("// Convert to 32bit integer")]),t._v("\n  }\n  "),e("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" hash;\n}")])]),e("p",[t._v("如果觉得这个不错，看下 "),e("a",{attrs:{href:"http://codepen.io/SitePoint/pen/LkvkON?editors=0012",target:"_blank"}},[t._v("CodePen")]),t._v("。在控制台上可以看到类似 "),e("code",[t._v("557027443")]),t._v(" 这样的 key 值。")]),t._v(" "),e("h2",{attrs:{id:"-"}},[t._v("结语")]),t._v(" "),e("p",[t._v("现在我们拥有了一个可以使用在 web app 中的工作方案了，我们使用 Web API，并且知晓响应结果会很好地为用户缓存下来。")]),t._v(" "),e("p",[t._v("最后一件事大概是这个扩展置于本文之外，将其作为一个真实、具体的项目，加上测试和 "),e("code",[t._v("README")]),t._v("，并发布到 npm 上 —— 换个时间再做吧！")])],1)},[],!1,null,null,null);n.default=component.exports}}]);