(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{218:function(t,n,l){"use strict";l.r(n);var e={computed:{data:function(){return{title:"Node.js .sh scripts Manager",description:"【nshm】 Node.js .sh scripts Manager",keywords:"原创,Node.js,命令行工具",pathname:"Node.js-sh-scripts-Manager",translation:null,create_time:"2016-07-12",prev:{title:"[译] 给 Service Worker 开后门",pathname:"backdoor-service-worker"},next:{title:"[译] 测试驱动开发：使用 Node.js 和 MongoDB 构建 Todo API",pathname:"todo-api-with-unit-test"}}}}},v=l(3),component=Object(v.a)(e,function(){var t=this,n=t.$createElement,l=t._self._c||n;return l("post",{attrs:{data:t.data}},[l("h2",{attrs:{id:"-"}},[t._v("命令行也有苦恼")]),t._v(" "),l("p",[t._v("不知身为前端er的你是不是还在使用 Windows 开发？反正我是。使用 Git？使用 npm scripts？好吧，命令行是少不了的吧？想必很多同学和我一样，使用 Git Bash 作为命令行终端吧。")]),t._v(" "),l("p",[t._v("可是每次都要敲，累不累？想想一次简单的 Git 提交需要几个步骤？")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[t._v("$ git add -A\n$ git commit -m "),l("span",{staticClass:"hljs-string"},[t._v("'commit'")]),t._v("\n$ git push")])]),l("p",[t._v("图简便的你可能会在 package.json 中这样配置：")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-javascript"},[t._v("{\n    "),l("span",{staticClass:"hljs-comment"},[t._v("// ...")]),t._v("\n    "),l("span",{staticClass:"hljs-string"},[t._v('"scripts"')]),t._v(": {\n       "),l("span",{staticClass:"hljs-comment"},[t._v("// ...")]),t._v("\n       "),l("span",{staticClass:"hljs-string"},[t._v('"push"')]),t._v(": "),l("span",{staticClass:"hljs-string"},[t._v("\"git add -A && git commit -m 'commit' && git push\"")]),t._v("\n    }\n}\n"),l("span",{staticClass:"hljs-comment"},[t._v("// ...")])])]),l("p",[t._v("然后再敲 "),l("code",[t._v("npm run push")]),t._v("。啊啊心好累。")]),t._v(" "),l("p",[t._v("用过 "),l("code",[t._v("browser-sync cli")]),t._v(" 吗？反正为了图简便，我是经常用的。敲过最变态的是下面这一行：")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[t._v("browser-sync start --server --files "),l("span",{staticClass:"hljs-string"},[t._v('"dist/*"')]),t._v("\\\n    --index "),l("span",{staticClass:"hljs-string"},[t._v('"dist/index.html"')]),t._v("\\\n    --open "),l("span",{staticClass:"hljs-string"},[t._v('"external"')]),t._v("\\\n    --reload-debounce --no-notify")])]),l("h2",{attrs:{id:"-bat-sh-"}},[t._v(".bat/.sh 的故事")]),t._v(" "),l("p",[t._v("敲过一次之后，发誓再也不这么玩了。索性在桌面保存了一个 "),l("code",[t._v("bs.bat")]),t._v(" 文件，把上面的内容放进去。每次都从桌面 copy 到工作目录中去，双击完事。")]),t._v(" "),l("p",[t._v("后来玩 github 稍微勤了一些，commit、pull 的时候，命令行敲起来固然爽得不行，可是累啊。在上一家公司做 react-native 应用的时候，对 "),l("code",[t._v("react-native run start")]),t._v(" "),l("code",[t._v("cd android && ./gradlew assembleRelease")]),t._v(" 也是深恶痛绝。最后无不以 bat、sh文件收尾。")]),t._v(" "),l("h2",{attrs:{id:"nshm-"}},[t._v("nshm 的由来")]),t._v(" "),l("p",[t._v("前些时间接触到一个管理 "),l("code",[t._v("npm registry")]),t._v(" 的 package，叫 "),l("code",[t._v("nrm")]),t._v("，用起来真是爽。"),l("code",[t._v("nrm use taobao")]),t._v(" "),l("code",[t._v("nrm add xx url")]),t._v("简单就能解决问题。这让我萌生一个想法：能不能不要每次都从桌面 copy 那些简单的脚本啊，来个简单的命令行自己把文件写目录不就 OK 了吗？")]),t._v(" "),l("p",[t._v("酝酿了一段时间。迟迟不肯动手。今天中午下楼抽烟，灵机一动，思路来了，花了半下午时间，边写边重构，最终做出来一个略嫌简陋但还能凑合用的工具，名之曰 “nshm”，取 “Node.js .sh scripts Manager” 的缩写，放在 Github 上了，"),l("a",{attrs:{href:"https://github.com/AngusFu/nshm",target:"_blank"}},[t._v("https://github.com/AngusFu/nshm")]),t._v("。")]),t._v(" "),l("p",[t._v("使用起来很简单，看文档就行。")]),t._v(" "),l("h2",{attrs:{id:"-"}},[t._v("安装")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[t._v("\n$ npm install nshm -g\n\n$ nshm <"),l("span",{staticClass:"hljs-built_in"},[t._v("command")]),t._v("> [args...]")])]),l("h2",{attrs:{id:"-"}},[t._v("添加一条自定义命令")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[t._v("$ nshm add <command_name> -[t|f] [text|path]\n\n"),l("span",{staticClass:"hljs-comment"},[t._v("# add file content")]),t._v("\n$ nshm add commit --file ./my-commit.sh\n"),l("span",{staticClass:"hljs-comment"},[t._v("# or")]),t._v("\n$ nshm add commit -f ./my-commit.sh\n\n"),l("span",{staticClass:"hljs-comment"},[t._v("# add text content")]),t._v("\n$ nshm add pull --text "),l("span",{staticClass:"hljs-string"},[t._v('"git pull"')]),t._v("\n"),l("span",{staticClass:"hljs-comment"},[t._v("# or")]),t._v("\n$ nshm add pull -t "),l("span",{staticClass:"hljs-string"},[t._v('"git pull"')])])]),l("h2",{attrs:{id:"-"}},[t._v("多个命令合并成一条命令")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[t._v("$ nshm co <command_name> ["),l("span",{staticClass:"hljs-built_in"},[t._v("command")]),t._v("|text] ["),l("span",{staticClass:"hljs-built_in"},[t._v("command")]),t._v("|text] ["),l("span",{staticClass:"hljs-built_in"},[t._v("command")]),t._v("|text] [...]\n\n$ nshm co git commit pull "),l("span",{staticClass:"hljs-string"},[t._v('"git status"')])])]),l("h2",{attrs:{id:"-"}},[t._v("删除缓存的命令")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[t._v("$ nshm rm <command_name> <command_name> <...> \n\n$ nshm rm commit pull git")])]),l("h2",{attrs:{id:"-"}},[t._v("清除所有缓存的命令")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[t._v("$ nshm clean")])]),l("h2",{attrs:{id:"-"}},[t._v("列出现有的命令")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[l("span",{staticClass:"hljs-comment"},[t._v("# view all names")]),t._v("\n$ nshm ls\n\n"),l("span",{staticClass:"hljs-comment"},[t._v("# view all details")]),t._v("\n$ nshm ls -a")])]),l("h2",{attrs:{id:"example-01"}},[t._v("Example 01")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[t._v("$ nshm add add -t "),l("span",{staticClass:"hljs-string"},[t._v('"git add -A"')]),t._v("\n$ nshm add commit -t "),l("span",{staticClass:"hljs-string"},[t._v("\"git commit -m 'push'\"")]),t._v("\n$ nshm add pull -t "),l("span",{staticClass:"hljs-string"},[t._v('"git push"')]),t._v("\n\n$ nshm co git add commit pull\n\n"),l("span",{staticClass:"hljs-comment"},[t._v("# init my directory")]),t._v("\n"),l("span",{staticClass:"hljs-comment"},[t._v("# then we'll get `add.sh` `commit.sh` `pull.sh`")]),t._v("\n$ nshm git")])]),l("h2",{attrs:{id:"example-02"}},[t._v("Example 02")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-bash"},[l("span",{staticClass:"hljs-comment"},[t._v("# browserSync cli ")]),t._v("\n"),l("span",{staticClass:"hljs-comment"},[t._v("# here we use `${}` as placeholders")]),t._v("\n"),l("span",{staticClass:"hljs-comment"},[t._v("# for necessary params")]),t._v("\n$ nshm add bs -t "),l("span",{staticClass:"hljs-string"},[t._v('"browser-sync start --server --files \\"'),l("span",{staticClass:"hljs-variable"},[t._v("${files}")]),t._v('\\" --index \\"'),l("span",{staticClass:"hljs-variable"},[t._v("${index}")]),t._v('\\" --open \\"external\\" --reload-debounce --no-notify"')]),t._v("\n\n"),l("span",{staticClass:"hljs-comment"},[t._v("# now we get the `bs.sh` file under our working directory")]),t._v("\n$ nshm bs --file "),l("span",{staticClass:"hljs-string"},[t._v("'**'")]),t._v(" --index "),l("span",{staticClass:"hljs-string"},[t._v("'index.html'")])])]),l("h2",{attrs:{id:"-"}},[t._v("结尾")]),t._v(" "),l("p",[t._v("工具默认自带了 Git 相关的 "),l("code",[t._v("commit")]),t._v(" "),l("code",[t._v("pull")]),t._v(" 及集成两者的 "),l("code",[t._v("git")]),t._v(" 命令，还有上面提到的 "),l("code",[t._v("browser-sync")]),t._v(" 的命令（简称作"),l("code",[t._v("bs")]),t._v("）。也可以使用 "),l("code",[t._v("nshm add")]),t._v(" 的形式自己添加。")]),t._v(" "),l("p",[t._v("微不足道的工具，自娱自乐一下，虽然显得 low 了点，也能解决自己的一点问题。")]),t._v(" "),l("p",[t._v("That's all。")]),t._v(" "),l("p",[t._v("PS: 今晚开始看 WebRTC 的内容，小有收获，学习的生活捡起来！")])])},[],!1,null,null,null);n.default=component.exports}}]);