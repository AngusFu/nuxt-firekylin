(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{238:function(t,e,n){"use strict";n.r(e);var v={computed:{data:function(){return{title:"[译] Service Worker 生命周期",description:"Service Worker 生命周期",keywords:"翻译,Service Worker",pathname:"the-service-worker-lifecycle",translation:{author:"@Ire Aderinokun",social:"https://twitter.com/ireaderinokun",from:"https://bitsofco.de/the-service-worker-lifecycle/"},create_time:"2016-07-25",prev:{title:"[译] eBay：style & speed",pathname:"browse-ebay-with-style-and-speed-ebay"},next:{title:"[译] 从发展历史理解 ES6 Module",pathname:"understanding-es6-modules-via-their-history"}}}}},r=n(3),component=Object(r.a)(v,function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("post",{attrs:{data:t.data}},[n("p",[t._v("如果使用过 Service Worker，之前你可能遇到过这样的问题，原来的 Service Worker 还在起作用，即使文件本身已经更新过。其中的原因在于 Service Worker 生命周期中的一些微妙之处；它可能会被安装，而且是有效的，但实际上却没有被 document 纳入控制。")]),t._v(" "),n("p",[t._v("Service Worker 可能拥有以下六种状态的一种："),n("strong",[t._v("解析成功（parsed）")]),t._v("，"),n("strong",[t._v("正在安装（installing）")]),t._v("，"),n("strong",[t._v("安装成功（installed）")]),t._v("，"),n("strong",[t._v("正在激活（activating）")]),t._v("，"),n("strong",[t._v("激活成功（activated）")]),t._v("，"),n("strong",[t._v("废弃（redundant）")]),t._v("。")]),t._v(" "),n("p",[n("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01716a20bbd762eaba.png",expression:"`https://p.ssl.qhimg.com/t01716a20bbd762eaba.png`"}],attrs:{alt:"Service Worker 状态"}})]),t._v(" "),n("h2",{attrs:{id:"-parsed-"}},[t._v("解析成功（Parsed）")]),t._v(" "),n("p",[t._v("首次注册 Service Worker 时，浏览器解决脚本并获得入口点。如果解析成功（而且满足其他条件，如 HTTPS 协议），就可以访问到 Service Worker 注册对象（registration object），其中包含 Service Worker 的状态及其作用域。")]),t._v(" "),n("pre",[n("code",{staticClass:"hljs lang-javascript"},[n("span",{staticClass:"hljs-comment"},[t._v("/* In main.js */")]),t._v("\n"),n("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" ("),n("span",{staticClass:"hljs-string"},[t._v("'serviceWorker'")]),t._v(" "),n("span",{staticClass:"hljs-keyword"},[t._v("in")]),t._v(" navigator) {  \n    navigator.serviceWorker.register("),n("span",{staticClass:"hljs-string"},[t._v("'./sw.js'")]),t._v(")\n    .then("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("registration")]),t._v(") ")]),t._v("{\n        "),n("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),n("span",{staticClass:"hljs-string"},[t._v('"Service Worker Registered"')]),t._v(", registration);\n    })\n    .catch("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("err")]),t._v(") ")]),t._v("{\n        "),n("span",{staticClass:"hljs-built_in"},[t._v("console")]),t._v(".log("),n("span",{staticClass:"hljs-string"},[t._v('"Service Worker Failed to Register"')]),t._v(", err);\n    })\n}")])]),n("p",[t._v("Service Worker 注册成功，并不意味着它已经完成安装，也不能说明它已经激活，仅仅是脚本被成功解析，与 document 同源，而且源协议是 HTTPS。一旦完成注册，Service Worker 将进入下一状态。")]),t._v(" "),n("h2",{attrs:{id:"-installing-"}},[t._v("正在安装（Installing）")]),t._v(" "),n("p",[t._v("Service Worker 脚本解析完成后，浏览器会试着安装，进入下一状态，“installing”。在 Service Worker "),n("code",[t._v("注册（registration）")]),t._v(" 对象中，我们可以通过 "),n("code",[t._v("installing")]),t._v(" 子对象检查该状态。")]),t._v(" "),n("pre",[n("code",{staticClass:"hljs lang-javascript"},[n("span",{staticClass:"hljs-comment"},[t._v("/* In main.js */")]),t._v("\nnavigator.serviceWorker.register("),n("span",{staticClass:"hljs-string"},[t._v("'./sw.js'")]),t._v(").then("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("registration")]),t._v(") ")]),t._v("{  \n    "),n("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (registration.installing) {\n        "),n("span",{staticClass:"hljs-comment"},[t._v("// Service Worker is Installing")]),t._v("\n    }\n})")])]),n("p",[t._v("在 installing 状态中，Service Worker 脚本中的 "),n("code",[t._v("install")]),t._v(" 事件被执行。我们通常在安装事件中，为 document 缓存静态文件。")]),t._v(" "),n("pre",[n("code",{staticClass:"hljs lang-javascript"},[n("span",{staticClass:"hljs-comment"},[t._v("/* In sw.js */")]),t._v("\nself.addEventListener("),n("span",{staticClass:"hljs-string"},[t._v("'install'")]),t._v(", "),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("event")]),t._v(") ")]),t._v("{  \n  event.waitUntil(\n    caches.open(currentCacheName).then("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("cache")]),t._v(") ")]),t._v("{\n      "),n("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" cache.addAll(arrayOfFilesToCache);\n    })\n  );\n});")])]),n("p",[t._v("若事件中有 "),n("code",[t._v("event.waitUntil()")]),t._v(" 方法，则 installing 事件会一直等到该方法中的 Promise 完成之后才会成功；若 Promise 被拒，则安装失败，Service Worker 直接进入"),n("strong",[t._v("废弃（redundant）")]),t._v("状态。")]),t._v(" "),n("pre",[n("code",{staticClass:"hljs lang-javascript"},[n("span",{staticClass:"hljs-comment"},[t._v("/* In sw.js */")]),t._v("\nself.addEventListener("),n("span",{staticClass:"hljs-string"},[t._v("'install'")]),t._v(", "),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("event")]),t._v(") ")]),t._v("{  \n  event.waitUntil(\n   "),n("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" "),n("span",{staticClass:"hljs-built_in"},[t._v("Promise")]),t._v(".reject(); "),n("span",{staticClass:"hljs-comment"},[t._v("// Failure")]),t._v("\n  );\n}); \n"),n("span",{staticClass:"hljs-comment"},[t._v("// Install Event will fail")])])]),n("h2",{attrs:{id:"-installed-waiting-"}},[t._v("安装成功/等待中（Installed/Waiting）")]),t._v(" "),n("p",[t._v("如果安装成功，Service Worker 进入"),n("strong",[t._v("安装成功（installed）")]),t._v("（也称为"),n("strong",[t._v("等待中[waiting]")]),t._v("）状态。在此状态中，它是一个有效的但尚未激活的 worker。它尚未纳入 document 的控制，确切来说是在等待着从当前 worker 接手。")]),t._v(" "),n("p",[t._v("在 Service Worker "),n("code",[t._v("注册（registration）")]),t._v(" 对象中，可通过 "),n("code",[t._v("waiting")]),t._v(" 子对象检查该状态。")]),t._v(" "),n("pre",[n("code",{staticClass:"hljs lang-javascript"},[n("span",{staticClass:"hljs-comment"},[t._v("/* In main.js */")]),t._v("\nnavigator.serviceWorker.register("),n("span",{staticClass:"hljs-string"},[t._v("'./sw.js'")]),t._v(").then("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("registration")]),t._v(") ")]),t._v("{  \n    "),n("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (registration.waiting) {\n        "),n("span",{staticClass:"hljs-comment"},[t._v("// Service Worker is Waiting")]),t._v("\n    }\n})")])]),n("p",[t._v("这是通知 App 用户升级新版本或自动升级的好时机。")]),t._v(" "),n("h2",{attrs:{id:"-activating-"}},[t._v("正在激活（Activating）")]),t._v(" "),n("p",[t._v("处于 waiting 状态的 Service Worker，在以下之一的情况下，会被触发 "),n("strong",[t._v("activating")]),t._v(" 状态。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("当前已无激活状态的 worker")])]),t._v(" "),n("li",[n("p",[t._v("Service Worker 脚本中的 "),n("code",[t._v("self.skipWaiting()")]),t._v(" 方法被调用")])]),t._v(" "),n("li",[n("p",[t._v("用户已关闭 Service Worker 作用域下的所有页面，从而释放了此前处于激活态的 worker")])]),t._v(" "),n("li",[n("p",[t._v("超出指定时间，从而释放此前处于激活态的 worker")])])]),t._v(" "),n("p",[t._v("处于 activating 状态期间，Service Worker 脚本中的 "),n("code",[t._v("activate")]),t._v(" 事件被执行。我们通常在 activate 事件中，清理 cache 中的文件。")]),t._v(" "),n("pre",[n("code",{staticClass:"hljs lang-javascript"},[n("span",{staticClass:"hljs-comment"},[t._v("/* In sw.js */")]),t._v("\nself.addEventListener("),n("span",{staticClass:"hljs-string"},[t._v("'activate'")]),t._v(", "),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("event")]),t._v(") ")]),t._v("{  \n  event.waitUntil(\n    "),n("span",{staticClass:"hljs-comment"},[t._v("// 获取所有 cache 名称")]),t._v("\n    caches.keys().then("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("cacheNames")]),t._v(") ")]),t._v("{\n      "),n("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" "),n("span",{staticClass:"hljs-built_in"},[t._v("Promise")]),t._v(".all(\n        "),n("span",{staticClass:"hljs-comment"},[t._v("// 获取所有不同于当前版本名称 cache 下的内容")]),t._v("\n        cacheNames.filter("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("cacheName")]),t._v(") ")]),t._v("{\n          "),n("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" cacheName != currentCacheName;\n        }).map("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("cacheName")]),t._v(") ")]),t._v("{\n          "),n("span",{staticClass:"hljs-comment"},[t._v("// 删除内容")]),t._v("\n          "),n("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" caches.delete(cacheName);\n        })\n      ); "),n("span",{staticClass:"hljs-comment"},[t._v("// end Promise.all()")]),t._v("\n    }) "),n("span",{staticClass:"hljs-comment"},[t._v("// end caches.keys()")]),t._v("\n  ); "),n("span",{staticClass:"hljs-comment"},[t._v("// end event.waitUntil()")]),t._v("\n});")])]),n("p",[t._v("与 install 事件类似，如果 activate 事件中存在 "),n("code",[t._v("event.waitUntil()")]),t._v(" 方法，则在其中的 Promise 完成之后，激活才会成功。如果 Promise 被拒，激活事件失败，Service Worker 进入"),n("strong",[t._v("废弃（redundant）")]),t._v("状态。")]),t._v(" "),n("h2",{attrs:{id:"-activated-"}},[t._v("激活成功（Activated）")]),t._v(" "),n("p",[t._v("如果激活成功，Service Worker 进入 "),n("strong",[t._v("active")]),t._v(" 状态。在此状态中，其成为接受 document 全面控制的激活态 worker。在 Service Worker "),n("code",[t._v("注册（registration）")]),t._v(" 对象中，可以通过 "),n("code",[t._v("active")]),t._v(" 子对象检查此状态。")]),t._v(" "),n("pre",[n("code",{staticClass:"hljs lang-javascript"},[n("span",{staticClass:"hljs-comment"},[t._v("/* In main.js */")]),t._v("\nnavigator.serviceWorker.register("),n("span",{staticClass:"hljs-string"},[t._v("'./sw.js'")]),t._v(").then("),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("registration")]),t._v(") ")]),t._v("{  \n    "),n("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (registration.active) {\n        "),n("span",{staticClass:"hljs-comment"},[t._v("// Service Worker is Active")]),t._v("\n    }\n})")])]),n("p",[t._v("如果 Service Worker 处于激活态，就可以应对事件性事件 —— "),n("code",[t._v("fetch")]),t._v(" 和 "),n("code",[t._v("message")]),t._v("。")]),t._v(" "),n("pre",[n("code",{staticClass:"hljs lang-javascript"},[n("span",{staticClass:"hljs-comment"},[t._v("/* In sw.js */")]),t._v("\n\nself.addEventListener("),n("span",{staticClass:"hljs-string"},[t._v("'fetch'")]),t._v(", "),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("event")]),t._v(") ")]),t._v("{  \n  "),n("span",{staticClass:"hljs-comment"},[t._v("// Do stuff with fetch events")]),t._v("\n});\n\nself.addEventListener("),n("span",{staticClass:"hljs-string"},[t._v("'message'")]),t._v(", "),n("span",{staticClass:"hljs-function"},[n("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),n("span",{staticClass:"hljs-params"},[t._v("event")]),t._v(") ")]),t._v("{  \n  "),n("span",{staticClass:"hljs-comment"},[t._v("// Do stuff with postMessages received from document")]),t._v("\n});")])]),n("h2",{attrs:{id:"-redundant-"}},[t._v("废弃（Redundant）")]),t._v(" "),n("p",[t._v("Service Worker 可能以下之一的原因而被"),n("strong",[t._v("废弃")]),t._v("（redundant，原意为“多余的，累赘的”）——")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("installing 事件失败")])]),t._v(" "),n("li",[n("p",[t._v("activating 事件失败")])]),t._v(" "),n("li",[n("p",[t._v("新的 Service Worker 替换其成为激活态 worker")])])]),t._v(" "),n("p",[t._v("如果 Service Worker 因前两个原因失败，我们可以通过开发者工具看到信息（以及其他相关信息）——")]),t._v(" "),n("p",[n("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t0141f8766c67ce01c1.png",expression:"`https://p.ssl.qhimg.com/t0141f8766c67ce01c1.png`"}],attrs:{alt:"Service Worker Redundant in DevTools"}})]),t._v(" "),n("p",[t._v("如果已存在前一版本的激活态 Service Worker，它会继续保持对 document 的控制。")])])},[],!1,null,null,null);e.default=component.exports}}]);