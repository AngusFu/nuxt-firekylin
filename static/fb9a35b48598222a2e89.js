(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{233:function(t,n,l){"use strict";l.r(n);var v={computed:{data:function(){return{title:"Chrome和Firefox下的网页截图",description:"Chrome和Firefox下的网页截图",keywords:"原创,JavaScript,Angular.js,网页截图",pathname:"screen-shot-upload",translation:null,create_time:"2016-03-11",prev:{title:"近来在Firefox上遇到的一些坑",pathname:"problems-with-firefox"},next:{title:"异步场景下的 js 编程",pathname:"js-promise-slides"}}}}},_=l(3),component=Object(_.a)(v,function(){var t=this,n=t.$createElement,l=t._self._c||n;return l("post",{attrs:{data:t.data}},[l("p",[t._v("最近在实现一个功能，需求如下：")]),t._v(" "),l("ul",[l("li",[t._v("前提：当前页面无弹窗")]),t._v(" "),l("li",[t._v("页面任意位置执行粘贴")]),t._v(" "),l("li",[t._v("读取剪切板中的截屏数据")]),t._v(" "),l("li",[t._v("上传截图")])]),t._v(" "),l("p",[t._v("首先还是从网上找相关的例子。")]),t._v(" "),l("p",[t._v("找到了SF上的专栏文章《"),l("a",{attrs:{href:"https://segmentfault.com/a/1190000004288686",target:"_blank"}},[t._v("js获取剪切板内容，js控制图片粘贴")]),t._v("》。")]),t._v(" "),l("p",[t._v("于是基于这个，做出了第一版的截图上传功能。")]),t._v(" "),l("p",[t._v("由于项目使用的是angularjs，事先已经封装好一套上传图片的办法，只需要调用 "),l("code",[t._v("$scope.image = blob")]),t._v("，自动就会发送、上传该文件。")]),t._v(" "),l("p",[t._v("我是半路介入项目的。原来为数不多的几个js文件实在太大，一个 "),l("code",[t._v("apiService.js")]),t._v("就累积了三四千行，各种服务都在这个文件里，主视图就一个mainController，也是三四千行。")]),t._v(" "),l("p",[t._v("说实话，我真的惊呆了。")]),t._v(" "),l("p",[t._v("所以还是尽量避免修改原来的代码。")]),t._v(" "),l("p",[t._v("按照我自己习惯，把功能封装成 "),l("code",[t._v("directive")]),t._v("，独立建一个文件。")]),t._v(" "),l("p",[l("strong",[t._v("代码如下")]),t._v("：（特别鸣谢"),l("a",{attrs:{href:"https://segmentfault.com/u/weil",target:"_blank"}},[t._v("本期节目")]),t._v("的文章）")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-javascript"},[l("span",{staticClass:"hljs-comment"},[t._v("/**\n * @description: 截屏上传\n * @author:      angusfu1126@qq.com\n * @date:        2016-03-03 20:59:09\n */")]),t._v("\napp.directive("),l("span",{staticClass:"hljs-string"},[t._v("'screenshotOrDragUpload'")]),t._v(", "),l("span",{staticClass:"hljs-comment"},[t._v("/*ngInject*/")]),t._v(" "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),l("span",{staticClass:"hljs-params"},[t._v("$filter")]),t._v(") ")]),t._v("{\n    "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" {\n        "),l("span",{staticClass:"hljs-attr"},[t._v("restrict")]),t._v(": "),l("span",{staticClass:"hljs-string"},[t._v("'A'")]),t._v("\n        link: "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),l("span",{staticClass:"hljs-params"},[t._v("$scope, iElm, iAttrs, controller")]),t._v(") ")]),t._v("{\n\n            "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" imageRegex = "),l("span",{staticClass:"hljs-regexp"},[t._v("/^image\\//i")]),t._v(";\n\n            "),l("span",{staticClass:"hljs-comment"},[t._v("// 粘贴截图事件")]),t._v("\n            "),l("span",{staticClass:"hljs-built_in"},[t._v("document")]),t._v(".addEventListener("),l("span",{staticClass:"hljs-string"},[t._v("'paste'")]),t._v(", onPasteHandler, "),l("span",{staticClass:"hljs-literal"},[t._v("false")]),t._v(");\n\n            "),l("span",{staticClass:"hljs-comment"},[t._v("// 作用域销毁的时候解除事件绑定")]),t._v("\n            $scope.$on("),l("span",{staticClass:"hljs-string"},[t._v("'$destroy'")]),t._v(", "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),l("span",{staticClass:"hljs-params"}),t._v(") ")]),t._v("{\n                "),l("span",{staticClass:"hljs-built_in"},[t._v("document")]),t._v(".removeEventListener("),l("span",{staticClass:"hljs-string"},[t._v("'paste'")]),t._v(", onPasteHandler);\n            });\n\n            "),l("span",{staticClass:"hljs-comment"},[t._v("/**\n             * 全局蒙版显示的时候\n             * 不执行粘贴或者拖拽功能\n             * 避免和各种弹层ng-show条件太耦合\n             * 此处使用DOM方法判断\n             */")]),t._v("\n            "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v(" "),l("span",{staticClass:"hljs-title"},[t._v("isMaskShown")]),t._v("("),l("span",{staticClass:"hljs-params"}),t._v(") ")]),t._v("{\n                "),l("span",{staticClass:"hljs-comment"},[t._v("// 项目依赖于jquery")]),t._v("\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" angular.element("),l("span",{staticClass:"hljs-string"},[t._v("'.global-mask'")]),t._v(").is("),l("span",{staticClass:"hljs-string"},[t._v("':visible'")]),t._v(");\n            }\n\n            "),l("span",{staticClass:"hljs-comment"},[t._v("/**\n             * 根据时间戳命名\n             */")]),t._v("\n            "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v(" "),l("span",{staticClass:"hljs-title"},[t._v("generateFileName")]),t._v("("),l("span",{staticClass:"hljs-params"},[t._v("user")]),t._v(") ")]),t._v("{\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" $filter("),l("span",{staticClass:"hljs-string"},[t._v("'date'")]),t._v(")("),l("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" "),l("span",{staticClass:"hljs-built_in"},[t._v("Date")]),t._v("(), "),l("span",{staticClass:"hljs-string"},[t._v("'yyyyMMdd_HH:MM:ss'")]),t._v(");\n            }\n\n            "),l("span",{staticClass:"hljs-comment"},[t._v("/**\n             * 处理 `ctrl + v` 截图粘贴事件\n             */")]),t._v("\n            "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v(" "),l("span",{staticClass:"hljs-title"},[t._v("onPasteHandler")]),t._v("("),l("span",{staticClass:"hljs-params"},[t._v("e")]),t._v(") ")]),t._v("{\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (isMaskShown()) "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(";\n\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" clipboardData = e.clipboardData;\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" ua = "),l("span",{staticClass:"hljs-built_in"},[t._v("window")]),t._v(".navigator.userAgent;\n\n                "),l("span",{staticClass:"hljs-comment"},[t._v("// 如果无法获取剪贴板则返回")]),t._v("\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (!clipboardData || !clipboardData.items) {\n                    "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(";\n                }\n\n                "),l("span",{staticClass:"hljs-comment"},[t._v("// Mac平台下Chrome49版本以下")]),t._v("\n                "),l("span",{staticClass:"hljs-comment"},[t._v("// 复制Finder中的文件的Bug Hack掉")]),t._v("\n                "),l("span",{staticClass:"hljs-comment"},[t._v("// see: https://segmentfault.com/a/1190000004288686")]),t._v("\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (clipboardData.items\n                        && clipboardData.items.length === "),l("span",{staticClass:"hljs-number"},[t._v("2")]),t._v("\n                        && clipboardData.items["),l("span",{staticClass:"hljs-number"},[t._v("0")]),t._v("].kind === "),l("span",{staticClass:"hljs-string"},[t._v('"string"')]),t._v("\n                        && clipboardData.items["),l("span",{staticClass:"hljs-number"},[t._v("1")]),t._v("].kind === "),l("span",{staticClass:"hljs-string"},[t._v('"file"')]),t._v("\n                        && clipboardData.types\n                        && clipboardData.types.length === "),l("span",{staticClass:"hljs-number"},[t._v("2")]),t._v("\n                        && clipboardData.types["),l("span",{staticClass:"hljs-number"},[t._v("0")]),t._v("] === "),l("span",{staticClass:"hljs-string"},[t._v('"text/plain"')]),t._v("\n                        && clipboardData.types["),l("span",{staticClass:"hljs-number"},[t._v("1")]),t._v("] === "),l("span",{staticClass:"hljs-string"},[t._v('"Files"')]),t._v("\n                        && ua.match("),l("span",{staticClass:"hljs-regexp"},[t._v("/Macintosh/i")]),t._v(")\n                        && "),l("span",{staticClass:"hljs-built_in"},[t._v("Number")]),t._v("(ua.match("),l("span",{staticClass:"hljs-regexp"},[t._v("/Chrome\\/(\\d{2})/i")]),t._v(")["),l("span",{staticClass:"hljs-number"},[t._v("1")]),t._v("]) < "),l("span",{staticClass:"hljs-number"},[t._v("49")]),t._v("\n                 ) {\n                    "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(";\n                }\n\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" len = clipboardData.items.length,\n                    item = "),l("span",{staticClass:"hljs-literal"},[t._v("null")]),t._v(",\n                    blob = "),l("span",{staticClass:"hljs-literal"},[t._v("null")]),t._v(";\n\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("while")]),t._v(" (len--) {\n\n                    item = clipboardData.items[len];\n\n                    "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (item.kind == "),l("span",{staticClass:"hljs-string"},[t._v('"file"')]),t._v(") {\n\n                        blob = item.getAsFile();\n\n                        "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (imageRegex.test(blob.type) && blob.size > "),l("span",{staticClass:"hljs-number"},[t._v("0")]),t._v(") {\n                            blob.name = generateFileName();\n\n                            "),l("span",{staticClass:"hljs-comment"},[t._v("// 调用上传")]),t._v("\n                            $scope.image = blob;\n                            "),l("span",{staticClass:"hljs-keyword"},[t._v("break")]),t._v(";\n                        }\n                    }\n                }\n            }\n\n\n        }\n    };\n});")])]),l("p",[t._v("当然，文章不可能就此结束。。。")]),t._v(" "),l("p",[t._v("分割线休息片刻")]),t._v(" "),l("p",[t._v("==============================================================")]),t._v(" "),l("p",[t._v("上述功能只有在 Chrome 和 Safari 中有效，但到火狐上面就挂掉了啊。。。")]),t._v(" "),l("p",[t._v("测试一下，给 document 绑定 paste 事件，粘贴的时候压根就读不到数据。")]),t._v(" "),l("p",[t._v("火狐下面，并没有 "),l("code",[t._v("clipboardData.items")]),t._v(" 这一项。")]),t._v(" "),l("p",[t._v("o(╯□╰)o")]),t._v(" "),l("p",[t._v("那怎么办呢？")]),t._v(" "),l("p",[t._v("只能退而求其次。放弃，或者寻求降级的办法。")]),t._v(" "),l("p",[t._v("就在我觉得无路可走的时候，火狐的一个特点让我眼前一亮。。。")]),t._v(" "),l("p",[t._v("分别用 chrome 和 firefox 打开这个 "),l("a",{attrs:{href:"http://sandbox.runjs.cn/show/xjhkfcr2",target:"_blank"}},[t._v("demo")]),t._v("试试看，试着用 qq 截个图或者在文件夹中复制一张图片，粘贴在红色框框里。")]),t._v(" "),l("p",[t._v("有没有发现，只有在火狐下能把图粘贴进来？")]),t._v(" "),l("p",[t._v("嗯，解决办法就在这里了。")]),t._v(" "),l("p",[t._v("其实，demo 中的红色框框是一个有 "),l("code",[t._v("contenteditable")]),t._v(" 属性的 "),l("code",[t._v("div")]),t._v("。")]),t._v(" "),l("p",[t._v("关于 "),l("code",[t._v("contenteditable")]),t._v("，此处有张鑫旭大神的博文两篇，且记在此处备忘：")]),t._v(" "),l("ul",[l("li",[l("p",[l("a",{attrs:{href:"http://www.zhangxinxu.com/wordpress/2016/01/contenteditable-plaintext-only/",target:"_blank"}},[t._v("小tip: 如何让contenteditable元素只能输入纯文本")])])]),t._v(" "),l("li",[l("p",[l("a",{attrs:{href:"http://www.zhangxinxu.com/wordpress/2010/12/div-textarea-height-auto/",target:"_blank"}},[t._v("div模拟textarea文本域轻松实现高度自适应")])])])]),t._v(" "),l("p",[t._v("firefox 下面，是可以把剪切板中的图片数据粘贴进去的，而 chrome 下面则不行了。")]),t._v(" "),l("p",[t._v("而项目的输入框，正好是一个 "),l("code",[t._v("pre")]),t._v(" 标签加上 "),l("code",[t._v("contenteditable")]),t._v(" 属性模拟出来的。完美~~~（此处应有金星老师表情包）")]),t._v(" "),l("p",[t._v("好了，在火狐中粘贴截图之后，右键查看一下，是不是像下图酱紫的？")]),t._v(" "),l("p",[l("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://segmentfault.com/img/bVtoBY",expression:"`https://segmentfault.com/img/bVtoBY`"}],attrs:{alt:"图片描述"}})]),t._v(" "),l("p",[t._v("有木有看到醒目的 "),l("code",[t._v("img")]),t._v(" 标签？")]),t._v(" "),l("p",[t._v("有木有看到醒目的 "),l("code",[t._v("data:image/png;base64,")]),t._v("？")]),t._v(" "),l("p",[t._v("办法有了。解决方案如下：")]),t._v(" "),l("ul",[l("li",[l("p",[t._v("监听 "),l("code",[t._v("keydown")]),t._v(" 事件")])]),t._v(" "),l("li",[l("p",[t._v("检测输入框是否为空")]),t._v(" "),l("ul",[l("li",[t._v("非空：不允许粘贴图片（但我们不能事先判断数据类型，只能迅速remove掉img元素）")]),t._v(" "),l("li",[t._v("空的：获取img元素及其src数据，然后迅速移除元素")])])])]),t._v(" "),l("p",[t._v("当然，此处是有坑的。。。")]),t._v(" "),l("p",[t._v("具体坑在哪里呢？看代码吧。其实我觉得我可能没完全解决。")]),t._v(" "),l("pre",[l("code",{staticClass:"hljs lang-javascript"},[l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" ("),l("span",{staticClass:"hljs-regexp"},[t._v("/firefox/i")]),t._v(".test(navigator.userAgent)) {\n    "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" URL = ("),l("span",{staticClass:"hljs-built_in"},[t._v("window")]),t._v(".URL || "),l("span",{staticClass:"hljs-built_in"},[t._v("window")]),t._v(".mozURL),\n\n        supportTransform = URL && "),l("span",{staticClass:"hljs-built_in"},[t._v("window")]),t._v(".Blob && "),l("span",{staticClass:"hljs-built_in"},[t._v("window")]),t._v(".atob && "),l("span",{staticClass:"hljs-built_in"},[t._v("window")]),t._v(".ArrayBuffer && "),l("span",{staticClass:"hljs-built_in"},[t._v("window")]),t._v(".Uint8Array,\n\n        "),l("span",{staticClass:"hljs-comment"},[t._v("// see http://jsperf.com/blob-base64-conversion")]),t._v("\n        convertBase64UrlToBlob = "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),l("span",{staticClass:"hljs-params"},[t._v("urlData")]),t._v(") ")]),t._v("{\n            "),l("span",{staticClass:"hljs-comment"},[t._v("//去掉url的头，并转换为byte")]),t._v("\n            "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" bytes = "),l("span",{staticClass:"hljs-built_in"},[t._v("window")]),t._v(".atob(urlData.split("),l("span",{staticClass:"hljs-string"},[t._v("','")]),t._v(")["),l("span",{staticClass:"hljs-number"},[t._v("1")]),t._v("]);\n\n            "),l("span",{staticClass:"hljs-comment"},[t._v("//处理异常,将ascii码小于0的转换为大于0")]),t._v("\n            "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" ab = "),l("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" "),l("span",{staticClass:"hljs-built_in"},[t._v("ArrayBuffer")]),t._v("(bytes.length);\n            "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" ia = "),l("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" "),l("span",{staticClass:"hljs-built_in"},[t._v("Uint8Array")]),t._v("(ab);\n            "),l("span",{staticClass:"hljs-keyword"},[t._v("for")]),t._v(" ("),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" i = "),l("span",{staticClass:"hljs-number"},[t._v("0")]),t._v("; i < bytes.length; i++) {\n                ia[i] = bytes.charCodeAt(i);\n            }\n            "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" "),l("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" Blob([ab], {\n                "),l("span",{staticClass:"hljs-attr"},[t._v("type")]),t._v(": "),l("span",{staticClass:"hljs-string"},[t._v("'image/png'")]),t._v("\n            });\n        };\n\n    $("),l("span",{staticClass:"hljs-string"},[t._v("'pre'")]),t._v(").on("),l("span",{staticClass:"hljs-string"},[t._v("'keydown'")]),t._v(", "),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),l("span",{staticClass:"hljs-params"},[t._v("e")]),t._v(") ")]),t._v("{\n\n        "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" isCtrlV = (e.ctrlKey && e.keyCode == "),l("span",{staticClass:"hljs-string"},[t._v("'86'")]),t._v(");\n\n        "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (!supportTransform || !isCtrlV) "),l("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(";\n\n        "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" $"),l("span",{staticClass:"hljs-keyword"},[t._v("this")]),t._v(" = $("),l("span",{staticClass:"hljs-keyword"},[t._v("this")]),t._v("),\n            html = $"),l("span",{staticClass:"hljs-keyword"},[t._v("this")]),t._v(".html(),\n            canPasteImage = "),l("span",{staticClass:"hljs-literal"},[t._v("false")]),t._v(";\n\n        "),l("span",{staticClass:"hljs-comment"},[t._v("// Notice")]),t._v("\n        "),l("span",{staticClass:"hljs-comment"},[t._v("// 火狐的坑在这里啊啊啊啊")]),t._v("\n        "),l("span",{staticClass:"hljs-comment"},[t._v("// 只有空的时候才能粘贴图片")]),t._v("\n        "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (!html || html === "),l("span",{staticClass:"hljs-string"},[t._v("'<br>'")]),t._v(") {\n            canPasteImage = "),l("span",{staticClass:"hljs-literal"},[t._v("true")]),t._v(";\n        }\n\n        setTimeout("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[t._v("function")]),t._v("("),l("span",{staticClass:"hljs-params"}),t._v(") ")]),t._v("{\n            "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" $imgs = $"),l("span",{staticClass:"hljs-keyword"},[t._v("this")]),t._v(".find("),l("span",{staticClass:"hljs-string"},[t._v("'img'")]),t._v(").remove(),\n                data = $imgs.eq("),l("span",{staticClass:"hljs-number"},[t._v("0")]),t._v(").attr("),l("span",{staticClass:"hljs-string"},[t._v("'src'")]),t._v(");\n\n            "),l("span",{staticClass:"hljs-keyword"},[t._v("if")]),t._v(" (canPasteImage && data) {\n                "),l("span",{staticClass:"hljs-keyword"},[t._v("var")]),t._v(" blob = convertBase64UrlToBlob(data);\n                blob.name = generateFileName();\n                "),l("span",{staticClass:"hljs-comment"},[t._v("// 调用上传")]),t._v("\n                $scope.image = blob;\n            }\n        }, "),l("span",{staticClass:"hljs-number"},[t._v("0")]),t._v(");\n\n    });\n}")])]),l("p",[t._v("做个笔记： Blob对象和base64字符串的转换, "),l("a",{attrs:{href:"http://jsperf.com/blob-base64-conversion",target:"_blank"}},[t._v("http://jsperf.com/blob-base64-conversion")])]),t._v(" "),l("p",[t._v("目前还没在IE上测试过，不知道结果如何。  ")])])},[],!1,null,null,null);n.default=component.exports}}]);